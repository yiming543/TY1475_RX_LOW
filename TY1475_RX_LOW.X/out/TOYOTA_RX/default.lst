

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 15 13:51:29 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Generated 05/01/2024 GMT
    43                           ; 
    44                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1936 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     0010                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0090                     	;# 
   110     0091                     	;# 
   111     0092                     	;# 
   112     0093                     	;# 
   113     0095                     	;# 
   114     0096                     	;# 
   115     0097                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     0110                     	;# 
   128     0111                     	;# 
   129     0112                     	;# 
   130     0113                     	;# 
   131     0114                     	;# 
   132     0115                     	;# 
   133     0116                     	;# 
   134     0117                     	;# 
   135     0118                     	;# 
   136     0119                     	;# 
   137     011A                     	;# 
   138     011B                     	;# 
   139     011D                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0191                     	;# 
   143     0191                     	;# 
   144     0192                     	;# 
   145     0193                     	;# 
   146     0193                     	;# 
   147     0193                     	;# 
   148     0194                     	;# 
   149     0195                     	;# 
   150     0196                     	;# 
   151     0199                     	;# 
   152     019A                     	;# 
   153     019B                     	;# 
   154     019B                     	;# 
   155     019B                     	;# 
   156     019B                     	;# 
   157     019C                     	;# 
   158     019C                     	;# 
   159     019D                     	;# 
   160     019E                     	;# 
   161     019F                     	;# 
   162     020D                     	;# 
   163     0210                     	;# 
   164     0211                     	;# 
   165     0212                     	;# 
   166     0213                     	;# 
   167     0214                     	;# 
   168     0215                     	;# 
   169     0215                     	;# 
   170     0216                     	;# 
   171     0217                     	;# 
   172     0291                     	;# 
   173     0291                     	;# 
   174     0292                     	;# 
   175     0293                     	;# 
   176     0294                     	;# 
   177     0295                     	;# 
   178     0295                     	;# 
   179     0296                     	;# 
   180     0298                     	;# 
   181     0298                     	;# 
   182     0299                     	;# 
   183     029A                     	;# 
   184     029B                     	;# 
   185     029C                     	;# 
   186     029C                     	;# 
   187     029D                     	;# 
   188     029E                     	;# 
   189     029F                     	;# 
   190     0311                     	;# 
   191     0311                     	;# 
   192     0312                     	;# 
   193     0313                     	;# 
   194     0314                     	;# 
   195     0315                     	;# 
   196     0315                     	;# 
   197     0316                     	;# 
   198     0318                     	;# 
   199     0318                     	;# 
   200     0319                     	;# 
   201     031A                     	;# 
   202     031C                     	;# 
   203     031C                     	;# 
   204     031D                     	;# 
   205     031E                     	;# 
   206     0394                     	;# 
   207     0395                     	;# 
   208     0396                     	;# 
   209     0415                     	;# 
   210     0416                     	;# 
   211     0417                     	;# 
   212     041C                     	;# 
   213     041D                     	;# 
   214     041E                     	;# 
   215     0791                     	;# 
   216     0792                     	;# 
   217     0793                     	;# 
   218     0794                     	;# 
   219     0795                     	;# 
   220     0798                     	;# 
   221     0799                     	;# 
   222     07A0                     	;# 
   223     07A1                     	;# 
   224     07A3                     	;# 
   225     07A4                     	;# 
   226     07A6                     	;# 
   227     07A7                     	;# 
   228     07A9                     	;# 
   229     07AA                     	;# 
   230     0FE4                     	;# 
   231     0FE5                     	;# 
   232     0FE6                     	;# 
   233     0FE7                     	;# 
   234     0FE8                     	;# 
   235     0FE9                     	;# 
   236     0FEA                     	;# 
   237     0FEB                     	;# 
   238     0FED                     	;# 
   239     0FEE                     	;# 
   240     0FEF                     	;# 
   241     0000                     	;# 
   242     0001                     	;# 
   243     0002                     	;# 
   244     0003                     	;# 
   245     0004                     	;# 
   246     0005                     	;# 
   247     0006                     	;# 
   248     0007                     	;# 
   249     0008                     	;# 
   250     0009                     	;# 
   251     000A                     	;# 
   252     000B                     	;# 
   253     000C                     	;# 
   254     000D                     	;# 
   255     000E                     	;# 
   256     0010                     	;# 
   257     0011                     	;# 
   258     0012                     	;# 
   259     0013                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0016                     	;# 
   263     0017                     	;# 
   264     0018                     	;# 
   265     0019                     	;# 
   266     001A                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001E                     	;# 
   270     001F                     	;# 
   271     008C                     	;# 
   272     008D                     	;# 
   273     008E                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     0110                     	;# 
   293     0111                     	;# 
   294     0112                     	;# 
   295     0113                     	;# 
   296     0114                     	;# 
   297     0115                     	;# 
   298     0116                     	;# 
   299     0117                     	;# 
   300     0118                     	;# 
   301     0119                     	;# 
   302     011A                     	;# 
   303     011B                     	;# 
   304     011D                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0191                     	;# 
   308     0191                     	;# 
   309     0192                     	;# 
   310     0193                     	;# 
   311     0193                     	;# 
   312     0193                     	;# 
   313     0194                     	;# 
   314     0195                     	;# 
   315     0196                     	;# 
   316     0199                     	;# 
   317     019A                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019B                     	;# 
   322     019C                     	;# 
   323     019C                     	;# 
   324     019D                     	;# 
   325     019E                     	;# 
   326     019F                     	;# 
   327     020D                     	;# 
   328     0210                     	;# 
   329     0211                     	;# 
   330     0212                     	;# 
   331     0213                     	;# 
   332     0214                     	;# 
   333     0215                     	;# 
   334     0215                     	;# 
   335     0216                     	;# 
   336     0217                     	;# 
   337     0291                     	;# 
   338     0291                     	;# 
   339     0292                     	;# 
   340     0293                     	;# 
   341     0294                     	;# 
   342     0295                     	;# 
   343     0295                     	;# 
   344     0296                     	;# 
   345     0298                     	;# 
   346     0298                     	;# 
   347     0299                     	;# 
   348     029A                     	;# 
   349     029B                     	;# 
   350     029C                     	;# 
   351     029C                     	;# 
   352     029D                     	;# 
   353     029E                     	;# 
   354     029F                     	;# 
   355     0311                     	;# 
   356     0311                     	;# 
   357     0312                     	;# 
   358     0313                     	;# 
   359     0314                     	;# 
   360     0315                     	;# 
   361     0315                     	;# 
   362     0316                     	;# 
   363     0318                     	;# 
   364     0318                     	;# 
   365     0319                     	;# 
   366     031A                     	;# 
   367     031C                     	;# 
   368     031C                     	;# 
   369     031D                     	;# 
   370     031E                     	;# 
   371     0394                     	;# 
   372     0395                     	;# 
   373     0396                     	;# 
   374     0415                     	;# 
   375     0416                     	;# 
   376     0417                     	;# 
   377     041C                     	;# 
   378     041D                     	;# 
   379     041E                     	;# 
   380     0791                     	;# 
   381     0792                     	;# 
   382     0793                     	;# 
   383     0794                     	;# 
   384     0795                     	;# 
   385     0798                     	;# 
   386     0799                     	;# 
   387     07A0                     	;# 
   388     07A1                     	;# 
   389     07A3                     	;# 
   390     07A4                     	;# 
   391     07A6                     	;# 
   392     07A7                     	;# 
   393     07A9                     	;# 
   394     07AA                     	;# 
   395     0FE4                     	;# 
   396     0FE5                     	;# 
   397     0FE6                     	;# 
   398     0FE7                     	;# 
   399     0FE8                     	;# 
   400     0FE9                     	;# 
   401     0FEA                     	;# 
   402     0FEB                     	;# 
   403     0FED                     	;# 
   404     0FEE                     	;# 
   405     0FEF                     	;# 
   406     0000                     	;# 
   407     0001                     	;# 
   408     0002                     	;# 
   409     0003                     	;# 
   410     0004                     	;# 
   411     0005                     	;# 
   412     0006                     	;# 
   413     0007                     	;# 
   414     0008                     	;# 
   415     0009                     	;# 
   416     000A                     	;# 
   417     000B                     	;# 
   418     000C                     	;# 
   419     000D                     	;# 
   420     000E                     	;# 
   421     0010                     	;# 
   422     0011                     	;# 
   423     0012                     	;# 
   424     0013                     	;# 
   425     0015                     	;# 
   426     0016                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001C                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     008C                     	;# 
   437     008D                     	;# 
   438     008E                     	;# 
   439     0090                     	;# 
   440     0091                     	;# 
   441     0092                     	;# 
   442     0093                     	;# 
   443     0095                     	;# 
   444     0096                     	;# 
   445     0097                     	;# 
   446     0098                     	;# 
   447     0099                     	;# 
   448     009A                     	;# 
   449     009B                     	;# 
   450     009B                     	;# 
   451     009C                     	;# 
   452     009D                     	;# 
   453     009E                     	;# 
   454     010C                     	;# 
   455     010D                     	;# 
   456     010E                     	;# 
   457     0110                     	;# 
   458     0111                     	;# 
   459     0112                     	;# 
   460     0113                     	;# 
   461     0114                     	;# 
   462     0115                     	;# 
   463     0116                     	;# 
   464     0117                     	;# 
   465     0118                     	;# 
   466     0119                     	;# 
   467     011A                     	;# 
   468     011B                     	;# 
   469     011D                     	;# 
   470     018C                     	;# 
   471     018D                     	;# 
   472     0191                     	;# 
   473     0191                     	;# 
   474     0192                     	;# 
   475     0193                     	;# 
   476     0193                     	;# 
   477     0193                     	;# 
   478     0194                     	;# 
   479     0195                     	;# 
   480     0196                     	;# 
   481     0199                     	;# 
   482     019A                     	;# 
   483     019B                     	;# 
   484     019B                     	;# 
   485     019B                     	;# 
   486     019B                     	;# 
   487     019C                     	;# 
   488     019C                     	;# 
   489     019D                     	;# 
   490     019E                     	;# 
   491     019F                     	;# 
   492     020D                     	;# 
   493     0210                     	;# 
   494     0211                     	;# 
   495     0212                     	;# 
   496     0213                     	;# 
   497     0214                     	;# 
   498     0215                     	;# 
   499     0215                     	;# 
   500     0216                     	;# 
   501     0217                     	;# 
   502     0291                     	;# 
   503     0291                     	;# 
   504     0292                     	;# 
   505     0293                     	;# 
   506     0294                     	;# 
   507     0295                     	;# 
   508     0295                     	;# 
   509     0296                     	;# 
   510     0298                     	;# 
   511     0298                     	;# 
   512     0299                     	;# 
   513     029A                     	;# 
   514     029B                     	;# 
   515     029C                     	;# 
   516     029C                     	;# 
   517     029D                     	;# 
   518     029E                     	;# 
   519     029F                     	;# 
   520     0311                     	;# 
   521     0311                     	;# 
   522     0312                     	;# 
   523     0313                     	;# 
   524     0314                     	;# 
   525     0315                     	;# 
   526     0315                     	;# 
   527     0316                     	;# 
   528     0318                     	;# 
   529     0318                     	;# 
   530     0319                     	;# 
   531     031A                     	;# 
   532     031C                     	;# 
   533     031C                     	;# 
   534     031D                     	;# 
   535     031E                     	;# 
   536     0394                     	;# 
   537     0395                     	;# 
   538     0396                     	;# 
   539     0415                     	;# 
   540     0416                     	;# 
   541     0417                     	;# 
   542     041C                     	;# 
   543     041D                     	;# 
   544     041E                     	;# 
   545     0791                     	;# 
   546     0792                     	;# 
   547     0793                     	;# 
   548     0794                     	;# 
   549     0795                     	;# 
   550     0798                     	;# 
   551     0799                     	;# 
   552     07A0                     	;# 
   553     07A1                     	;# 
   554     07A3                     	;# 
   555     07A4                     	;# 
   556     07A6                     	;# 
   557     07A7                     	;# 
   558     07A9                     	;# 
   559     07AA                     	;# 
   560     0FE4                     	;# 
   561     0FE5                     	;# 
   562     0FE6                     	;# 
   563     0FE7                     	;# 
   564     0FE8                     	;# 
   565     0FE9                     	;# 
   566     0FEA                     	;# 
   567     0FEB                     	;# 
   568     0FED                     	;# 
   569     0FEE                     	;# 
   570     0FEF                     	;# 
   571     0000                     	;# 
   572     0001                     	;# 
   573     0002                     	;# 
   574     0003                     	;# 
   575     0004                     	;# 
   576     0005                     	;# 
   577     0006                     	;# 
   578     0007                     	;# 
   579     0008                     	;# 
   580     0009                     	;# 
   581     000A                     	;# 
   582     000B                     	;# 
   583     000C                     	;# 
   584     000D                     	;# 
   585     000E                     	;# 
   586     0010                     	;# 
   587     0011                     	;# 
   588     0012                     	;# 
   589     0013                     	;# 
   590     0015                     	;# 
   591     0016                     	;# 
   592     0016                     	;# 
   593     0017                     	;# 
   594     0018                     	;# 
   595     0019                     	;# 
   596     001A                     	;# 
   597     001B                     	;# 
   598     001C                     	;# 
   599     001E                     	;# 
   600     001F                     	;# 
   601     008C                     	;# 
   602     008D                     	;# 
   603     008E                     	;# 
   604     0090                     	;# 
   605     0091                     	;# 
   606     0092                     	;# 
   607     0093                     	;# 
   608     0095                     	;# 
   609     0096                     	;# 
   610     0097                     	;# 
   611     0098                     	;# 
   612     0099                     	;# 
   613     009A                     	;# 
   614     009B                     	;# 
   615     009B                     	;# 
   616     009C                     	;# 
   617     009D                     	;# 
   618     009E                     	;# 
   619     010C                     	;# 
   620     010D                     	;# 
   621     010E                     	;# 
   622     0110                     	;# 
   623     0111                     	;# 
   624     0112                     	;# 
   625     0113                     	;# 
   626     0114                     	;# 
   627     0115                     	;# 
   628     0116                     	;# 
   629     0117                     	;# 
   630     0118                     	;# 
   631     0119                     	;# 
   632     011A                     	;# 
   633     011B                     	;# 
   634     011D                     	;# 
   635     018C                     	;# 
   636     018D                     	;# 
   637     0191                     	;# 
   638     0191                     	;# 
   639     0192                     	;# 
   640     0193                     	;# 
   641     0193                     	;# 
   642     0193                     	;# 
   643     0194                     	;# 
   644     0195                     	;# 
   645     0196                     	;# 
   646     0199                     	;# 
   647     019A                     	;# 
   648     019B                     	;# 
   649     019B                     	;# 
   650     019B                     	;# 
   651     019B                     	;# 
   652     019C                     	;# 
   653     019C                     	;# 
   654     019D                     	;# 
   655     019E                     	;# 
   656     019F                     	;# 
   657     020D                     	;# 
   658     0210                     	;# 
   659     0211                     	;# 
   660     0212                     	;# 
   661     0213                     	;# 
   662     0214                     	;# 
   663     0215                     	;# 
   664     0215                     	;# 
   665     0216                     	;# 
   666     0217                     	;# 
   667     0291                     	;# 
   668     0291                     	;# 
   669     0292                     	;# 
   670     0293                     	;# 
   671     0294                     	;# 
   672     0295                     	;# 
   673     0295                     	;# 
   674     0296                     	;# 
   675     0298                     	;# 
   676     0298                     	;# 
   677     0299                     	;# 
   678     029A                     	;# 
   679     029B                     	;# 
   680     029C                     	;# 
   681     029C                     	;# 
   682     029D                     	;# 
   683     029E                     	;# 
   684     029F                     	;# 
   685     0311                     	;# 
   686     0311                     	;# 
   687     0312                     	;# 
   688     0313                     	;# 
   689     0314                     	;# 
   690     0315                     	;# 
   691     0315                     	;# 
   692     0316                     	;# 
   693     0318                     	;# 
   694     0318                     	;# 
   695     0319                     	;# 
   696     031A                     	;# 
   697     031C                     	;# 
   698     031C                     	;# 
   699     031D                     	;# 
   700     031E                     	;# 
   701     0394                     	;# 
   702     0395                     	;# 
   703     0396                     	;# 
   704     0415                     	;# 
   705     0416                     	;# 
   706     0417                     	;# 
   707     041C                     	;# 
   708     041D                     	;# 
   709     041E                     	;# 
   710     0791                     	;# 
   711     0792                     	;# 
   712     0793                     	;# 
   713     0794                     	;# 
   714     0795                     	;# 
   715     0798                     	;# 
   716     0799                     	;# 
   717     07A0                     	;# 
   718     07A1                     	;# 
   719     07A3                     	;# 
   720     07A4                     	;# 
   721     07A6                     	;# 
   722     07A7                     	;# 
   723     07A9                     	;# 
   724     07AA                     	;# 
   725     0FE4                     	;# 
   726     0FE5                     	;# 
   727     0FE6                     	;# 
   728     0FE7                     	;# 
   729     0FE8                     	;# 
   730     0FE9                     	;# 
   731     0FEA                     	;# 
   732     0FEB                     	;# 
   733     0FED                     	;# 
   734     0FEE                     	;# 
   735     0FEF                     	;# 
   736     0000                     	;# 
   737     0001                     	;# 
   738     0002                     	;# 
   739     0003                     	;# 
   740     0004                     	;# 
   741     0005                     	;# 
   742     0006                     	;# 
   743     0007                     	;# 
   744     0008                     	;# 
   745     0009                     	;# 
   746     000A                     	;# 
   747     000B                     	;# 
   748     000C                     	;# 
   749     000D                     	;# 
   750     000E                     	;# 
   751     0010                     	;# 
   752     0011                     	;# 
   753     0012                     	;# 
   754     0013                     	;# 
   755     0015                     	;# 
   756     0016                     	;# 
   757     0016                     	;# 
   758     0017                     	;# 
   759     0018                     	;# 
   760     0019                     	;# 
   761     001A                     	;# 
   762     001B                     	;# 
   763     001C                     	;# 
   764     001E                     	;# 
   765     001F                     	;# 
   766     008C                     	;# 
   767     008D                     	;# 
   768     008E                     	;# 
   769     0090                     	;# 
   770     0091                     	;# 
   771     0092                     	;# 
   772     0093                     	;# 
   773     0095                     	;# 
   774     0096                     	;# 
   775     0097                     	;# 
   776     0098                     	;# 
   777     0099                     	;# 
   778     009A                     	;# 
   779     009B                     	;# 
   780     009B                     	;# 
   781     009C                     	;# 
   782     009D                     	;# 
   783     009E                     	;# 
   784     010C                     	;# 
   785     010D                     	;# 
   786     010E                     	;# 
   787     0110                     	;# 
   788     0111                     	;# 
   789     0112                     	;# 
   790     0113                     	;# 
   791     0114                     	;# 
   792     0115                     	;# 
   793     0116                     	;# 
   794     0117                     	;# 
   795     0118                     	;# 
   796     0119                     	;# 
   797     011A                     	;# 
   798     011B                     	;# 
   799     011D                     	;# 
   800     018C                     	;# 
   801     018D                     	;# 
   802     0191                     	;# 
   803     0191                     	;# 
   804     0192                     	;# 
   805     0193                     	;# 
   806     0193                     	;# 
   807     0193                     	;# 
   808     0194                     	;# 
   809     0195                     	;# 
   810     0196                     	;# 
   811     0199                     	;# 
   812     019A                     	;# 
   813     019B                     	;# 
   814     019B                     	;# 
   815     019B                     	;# 
   816     019B                     	;# 
   817     019C                     	;# 
   818     019C                     	;# 
   819     019D                     	;# 
   820     019E                     	;# 
   821     019F                     	;# 
   822     020D                     	;# 
   823     0210                     	;# 
   824     0211                     	;# 
   825     0212                     	;# 
   826     0213                     	;# 
   827     0214                     	;# 
   828     0215                     	;# 
   829     0215                     	;# 
   830     0216                     	;# 
   831     0217                     	;# 
   832     0291                     	;# 
   833     0291                     	;# 
   834     0292                     	;# 
   835     0293                     	;# 
   836     0294                     	;# 
   837     0295                     	;# 
   838     0295                     	;# 
   839     0296                     	;# 
   840     0298                     	;# 
   841     0298                     	;# 
   842     0299                     	;# 
   843     029A                     	;# 
   844     029B                     	;# 
   845     029C                     	;# 
   846     029C                     	;# 
   847     029D                     	;# 
   848     029E                     	;# 
   849     029F                     	;# 
   850     0311                     	;# 
   851     0311                     	;# 
   852     0312                     	;# 
   853     0313                     	;# 
   854     0314                     	;# 
   855     0315                     	;# 
   856     0315                     	;# 
   857     0316                     	;# 
   858     0318                     	;# 
   859     0318                     	;# 
   860     0319                     	;# 
   861     031A                     	;# 
   862     031C                     	;# 
   863     031C                     	;# 
   864     031D                     	;# 
   865     031E                     	;# 
   866     0394                     	;# 
   867     0395                     	;# 
   868     0396                     	;# 
   869     0415                     	;# 
   870     0416                     	;# 
   871     0417                     	;# 
   872     041C                     	;# 
   873     041D                     	;# 
   874     041E                     	;# 
   875     0791                     	;# 
   876     0792                     	;# 
   877     0793                     	;# 
   878     0794                     	;# 
   879     0795                     	;# 
   880     0798                     	;# 
   881     0799                     	;# 
   882     07A0                     	;# 
   883     07A1                     	;# 
   884     07A3                     	;# 
   885     07A4                     	;# 
   886     07A6                     	;# 
   887     07A7                     	;# 
   888     07A9                     	;# 
   889     07AA                     	;# 
   890     0FE4                     	;# 
   891     0FE5                     	;# 
   892     0FE6                     	;# 
   893     0FE7                     	;# 
   894     0FE8                     	;# 
   895     0FE9                     	;# 
   896     0FEA                     	;# 
   897     0FEB                     	;# 
   898     0FED                     	;# 
   899     0FEE                     	;# 
   900     0FEF                     	;# 
   901     0000                     	;# 
   902     0001                     	;# 
   903     0002                     	;# 
   904     0003                     	;# 
   905     0004                     	;# 
   906     0005                     	;# 
   907     0006                     	;# 
   908     0007                     	;# 
   909     0008                     	;# 
   910     0009                     	;# 
   911     000A                     	;# 
   912     000B                     	;# 
   913     000C                     	;# 
   914     000D                     	;# 
   915     000E                     	;# 
   916     0010                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0015                     	;# 
   921     0016                     	;# 
   922     0016                     	;# 
   923     0017                     	;# 
   924     0018                     	;# 
   925     0019                     	;# 
   926     001A                     	;# 
   927     001B                     	;# 
   928     001C                     	;# 
   929     001E                     	;# 
   930     001F                     	;# 
   931     008C                     	;# 
   932     008D                     	;# 
   933     008E                     	;# 
   934     0090                     	;# 
   935     0091                     	;# 
   936     0092                     	;# 
   937     0093                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     010E                     	;# 
   952     0110                     	;# 
   953     0111                     	;# 
   954     0112                     	;# 
   955     0113                     	;# 
   956     0114                     	;# 
   957     0115                     	;# 
   958     0116                     	;# 
   959     0117                     	;# 
   960     0118                     	;# 
   961     0119                     	;# 
   962     011A                     	;# 
   963     011B                     	;# 
   964     011D                     	;# 
   965     018C                     	;# 
   966     018D                     	;# 
   967     0191                     	;# 
   968     0191                     	;# 
   969     0192                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0193                     	;# 
   973     0194                     	;# 
   974     0195                     	;# 
   975     0196                     	;# 
   976     0199                     	;# 
   977     019A                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019B                     	;# 
   982     019C                     	;# 
   983     019C                     	;# 
   984     019D                     	;# 
   985     019E                     	;# 
   986     019F                     	;# 
   987     020D                     	;# 
   988     0210                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0213                     	;# 
   992     0214                     	;# 
   993     0215                     	;# 
   994     0215                     	;# 
   995     0216                     	;# 
   996     0217                     	;# 
   997     0291                     	;# 
   998     0291                     	;# 
   999     0292                     	;# 
  1000     0293                     	;# 
  1001     0294                     	;# 
  1002     0295                     	;# 
  1003     0295                     	;# 
  1004     0296                     	;# 
  1005     0298                     	;# 
  1006     0298                     	;# 
  1007     0299                     	;# 
  1008     029A                     	;# 
  1009     029B                     	;# 
  1010     029C                     	;# 
  1011     029C                     	;# 
  1012     029D                     	;# 
  1013     029E                     	;# 
  1014     029F                     	;# 
  1015     0311                     	;# 
  1016     0311                     	;# 
  1017     0312                     	;# 
  1018     0313                     	;# 
  1019     0314                     	;# 
  1020     0315                     	;# 
  1021     0315                     	;# 
  1022     0316                     	;# 
  1023     0318                     	;# 
  1024     0318                     	;# 
  1025     0319                     	;# 
  1026     031A                     	;# 
  1027     031C                     	;# 
  1028     031C                     	;# 
  1029     031D                     	;# 
  1030     031E                     	;# 
  1031     0394                     	;# 
  1032     0395                     	;# 
  1033     0396                     	;# 
  1034     0415                     	;# 
  1035     0416                     	;# 
  1036     0417                     	;# 
  1037     041C                     	;# 
  1038     041D                     	;# 
  1039     041E                     	;# 
  1040     0791                     	;# 
  1041     0792                     	;# 
  1042     0793                     	;# 
  1043     0794                     	;# 
  1044     0795                     	;# 
  1045     0798                     	;# 
  1046     0799                     	;# 
  1047     07A0                     	;# 
  1048     07A1                     	;# 
  1049     07A3                     	;# 
  1050     07A4                     	;# 
  1051     07A6                     	;# 
  1052     07A7                     	;# 
  1053     07A9                     	;# 
  1054     07AA                     	;# 
  1055     0FE4                     	;# 
  1056     0FE5                     	;# 
  1057     0FE6                     	;# 
  1058     0FE7                     	;# 
  1059     0FE8                     	;# 
  1060     0FE9                     	;# 
  1061     0FEA                     	;# 
  1062     0FEB                     	;# 
  1063     0FED                     	;# 
  1064     0FEE                     	;# 
  1065     0FEF                     	;# 
  1066     0000                     	;# 
  1067     0001                     	;# 
  1068     0002                     	;# 
  1069     0003                     	;# 
  1070     0004                     	;# 
  1071     0005                     	;# 
  1072     0006                     	;# 
  1073     0007                     	;# 
  1074     0008                     	;# 
  1075     0009                     	;# 
  1076     000A                     	;# 
  1077     000B                     	;# 
  1078     000C                     	;# 
  1079     000D                     	;# 
  1080     000E                     	;# 
  1081     0010                     	;# 
  1082     0011                     	;# 
  1083     0012                     	;# 
  1084     0013                     	;# 
  1085     0015                     	;# 
  1086     0016                     	;# 
  1087     0016                     	;# 
  1088     0017                     	;# 
  1089     0018                     	;# 
  1090     0019                     	;# 
  1091     001A                     	;# 
  1092     001B                     	;# 
  1093     001C                     	;# 
  1094     001E                     	;# 
  1095     001F                     	;# 
  1096     008C                     	;# 
  1097     008D                     	;# 
  1098     008E                     	;# 
  1099     0090                     	;# 
  1100     0091                     	;# 
  1101     0092                     	;# 
  1102     0093                     	;# 
  1103     0095                     	;# 
  1104     0096                     	;# 
  1105     0097                     	;# 
  1106     0098                     	;# 
  1107     0099                     	;# 
  1108     009A                     	;# 
  1109     009B                     	;# 
  1110     009B                     	;# 
  1111     009C                     	;# 
  1112     009D                     	;# 
  1113     009E                     	;# 
  1114     010C                     	;# 
  1115     010D                     	;# 
  1116     010E                     	;# 
  1117     0110                     	;# 
  1118     0111                     	;# 
  1119     0112                     	;# 
  1120     0113                     	;# 
  1121     0114                     	;# 
  1122     0115                     	;# 
  1123     0116                     	;# 
  1124     0117                     	;# 
  1125     0118                     	;# 
  1126     0119                     	;# 
  1127     011A                     	;# 
  1128     011B                     	;# 
  1129     011D                     	;# 
  1130     018C                     	;# 
  1131     018D                     	;# 
  1132     0191                     	;# 
  1133     0191                     	;# 
  1134     0192                     	;# 
  1135     0193                     	;# 
  1136     0193                     	;# 
  1137     0193                     	;# 
  1138     0194                     	;# 
  1139     0195                     	;# 
  1140     0196                     	;# 
  1141     0199                     	;# 
  1142     019A                     	;# 
  1143     019B                     	;# 
  1144     019B                     	;# 
  1145     019B                     	;# 
  1146     019B                     	;# 
  1147     019C                     	;# 
  1148     019C                     	;# 
  1149     019D                     	;# 
  1150     019E                     	;# 
  1151     019F                     	;# 
  1152     020D                     	;# 
  1153     0210                     	;# 
  1154     0211                     	;# 
  1155     0212                     	;# 
  1156     0213                     	;# 
  1157     0214                     	;# 
  1158     0215                     	;# 
  1159     0215                     	;# 
  1160     0216                     	;# 
  1161     0217                     	;# 
  1162     0291                     	;# 
  1163     0291                     	;# 
  1164     0292                     	;# 
  1165     0293                     	;# 
  1166     0294                     	;# 
  1167     0295                     	;# 
  1168     0295                     	;# 
  1169     0296                     	;# 
  1170     0298                     	;# 
  1171     0298                     	;# 
  1172     0299                     	;# 
  1173     029A                     	;# 
  1174     029B                     	;# 
  1175     029C                     	;# 
  1176     029C                     	;# 
  1177     029D                     	;# 
  1178     029E                     	;# 
  1179     029F                     	;# 
  1180     0311                     	;# 
  1181     0311                     	;# 
  1182     0312                     	;# 
  1183     0313                     	;# 
  1184     0314                     	;# 
  1185     0315                     	;# 
  1186     0315                     	;# 
  1187     0316                     	;# 
  1188     0318                     	;# 
  1189     0318                     	;# 
  1190     0319                     	;# 
  1191     031A                     	;# 
  1192     031C                     	;# 
  1193     031C                     	;# 
  1194     031D                     	;# 
  1195     031E                     	;# 
  1196     0394                     	;# 
  1197     0395                     	;# 
  1198     0396                     	;# 
  1199     0415                     	;# 
  1200     0416                     	;# 
  1201     0417                     	;# 
  1202     041C                     	;# 
  1203     041D                     	;# 
  1204     041E                     	;# 
  1205     0791                     	;# 
  1206     0792                     	;# 
  1207     0793                     	;# 
  1208     0794                     	;# 
  1209     0795                     	;# 
  1210     0798                     	;# 
  1211     0799                     	;# 
  1212     07A0                     	;# 
  1213     07A1                     	;# 
  1214     07A3                     	;# 
  1215     07A4                     	;# 
  1216     07A6                     	;# 
  1217     07A7                     	;# 
  1218     07A9                     	;# 
  1219     07AA                     	;# 
  1220     0FE4                     	;# 
  1221     0FE5                     	;# 
  1222     0FE6                     	;# 
  1223     0FE7                     	;# 
  1224     0FE8                     	;# 
  1225     0FE9                     	;# 
  1226     0FEA                     	;# 
  1227     0FEB                     	;# 
  1228     0FED                     	;# 
  1229     0FEE                     	;# 
  1230     0FEF                     	;# 
  1231     0000                     	;# 
  1232     0001                     	;# 
  1233     0002                     	;# 
  1234     0003                     	;# 
  1235     0004                     	;# 
  1236     0005                     	;# 
  1237     0006                     	;# 
  1238     0007                     	;# 
  1239     0008                     	;# 
  1240     0009                     	;# 
  1241     000A                     	;# 
  1242     000B                     	;# 
  1243     000C                     	;# 
  1244     000D                     	;# 
  1245     000E                     	;# 
  1246     0010                     	;# 
  1247     0011                     	;# 
  1248     0012                     	;# 
  1249     0013                     	;# 
  1250     0015                     	;# 
  1251     0016                     	;# 
  1252     0016                     	;# 
  1253     0017                     	;# 
  1254     0018                     	;# 
  1255     0019                     	;# 
  1256     001A                     	;# 
  1257     001B                     	;# 
  1258     001C                     	;# 
  1259     001E                     	;# 
  1260     001F                     	;# 
  1261     008C                     	;# 
  1262     008D                     	;# 
  1263     008E                     	;# 
  1264     0090                     	;# 
  1265     0091                     	;# 
  1266     0092                     	;# 
  1267     0093                     	;# 
  1268     0095                     	;# 
  1269     0096                     	;# 
  1270     0097                     	;# 
  1271     0098                     	;# 
  1272     0099                     	;# 
  1273     009A                     	;# 
  1274     009B                     	;# 
  1275     009B                     	;# 
  1276     009C                     	;# 
  1277     009D                     	;# 
  1278     009E                     	;# 
  1279     010C                     	;# 
  1280     010D                     	;# 
  1281     010E                     	;# 
  1282     0110                     	;# 
  1283     0111                     	;# 
  1284     0112                     	;# 
  1285     0113                     	;# 
  1286     0114                     	;# 
  1287     0115                     	;# 
  1288     0116                     	;# 
  1289     0117                     	;# 
  1290     0118                     	;# 
  1291     0119                     	;# 
  1292     011A                     	;# 
  1293     011B                     	;# 
  1294     011D                     	;# 
  1295     018C                     	;# 
  1296     018D                     	;# 
  1297     0191                     	;# 
  1298     0191                     	;# 
  1299     0192                     	;# 
  1300     0193                     	;# 
  1301     0193                     	;# 
  1302     0193                     	;# 
  1303     0194                     	;# 
  1304     0195                     	;# 
  1305     0196                     	;# 
  1306     0199                     	;# 
  1307     019A                     	;# 
  1308     019B                     	;# 
  1309     019B                     	;# 
  1310     019B                     	;# 
  1311     019B                     	;# 
  1312     019C                     	;# 
  1313     019C                     	;# 
  1314     019D                     	;# 
  1315     019E                     	;# 
  1316     019F                     	;# 
  1317     020D                     	;# 
  1318     0210                     	;# 
  1319     0211                     	;# 
  1320     0212                     	;# 
  1321     0213                     	;# 
  1322     0214                     	;# 
  1323     0215                     	;# 
  1324     0215                     	;# 
  1325     0216                     	;# 
  1326     0217                     	;# 
  1327     0291                     	;# 
  1328     0291                     	;# 
  1329     0292                     	;# 
  1330     0293                     	;# 
  1331     0294                     	;# 
  1332     0295                     	;# 
  1333     0295                     	;# 
  1334     0296                     	;# 
  1335     0298                     	;# 
  1336     0298                     	;# 
  1337     0299                     	;# 
  1338     029A                     	;# 
  1339     029B                     	;# 
  1340     029C                     	;# 
  1341     029C                     	;# 
  1342     029D                     	;# 
  1343     029E                     	;# 
  1344     029F                     	;# 
  1345     0311                     	;# 
  1346     0311                     	;# 
  1347     0312                     	;# 
  1348     0313                     	;# 
  1349     0314                     	;# 
  1350     0315                     	;# 
  1351     0315                     	;# 
  1352     0316                     	;# 
  1353     0318                     	;# 
  1354     0318                     	;# 
  1355     0319                     	;# 
  1356     031A                     	;# 
  1357     031C                     	;# 
  1358     031C                     	;# 
  1359     031D                     	;# 
  1360     031E                     	;# 
  1361     0394                     	;# 
  1362     0395                     	;# 
  1363     0396                     	;# 
  1364     0415                     	;# 
  1365     0416                     	;# 
  1366     0417                     	;# 
  1367     041C                     	;# 
  1368     041D                     	;# 
  1369     041E                     	;# 
  1370     0791                     	;# 
  1371     0792                     	;# 
  1372     0793                     	;# 
  1373     0794                     	;# 
  1374     0795                     	;# 
  1375     0798                     	;# 
  1376     0799                     	;# 
  1377     07A0                     	;# 
  1378     07A1                     	;# 
  1379     07A3                     	;# 
  1380     07A4                     	;# 
  1381     07A6                     	;# 
  1382     07A7                     	;# 
  1383     07A9                     	;# 
  1384     07AA                     	;# 
  1385     0FE4                     	;# 
  1386     0FE5                     	;# 
  1387     0FE6                     	;# 
  1388     0FE7                     	;# 
  1389     0FE8                     	;# 
  1390     0FE9                     	;# 
  1391     0FEA                     	;# 
  1392     0FEB                     	;# 
  1393     0FED                     	;# 
  1394     0FEE                     	;# 
  1395     0FEF                     	;# 
  1396     0000                     	;# 
  1397     0001                     	;# 
  1398     0002                     	;# 
  1399     0003                     	;# 
  1400     0004                     	;# 
  1401     0005                     	;# 
  1402     0006                     	;# 
  1403     0007                     	;# 
  1404     0008                     	;# 
  1405     0009                     	;# 
  1406     000A                     	;# 
  1407     000B                     	;# 
  1408     000C                     	;# 
  1409     000D                     	;# 
  1410     000E                     	;# 
  1411     0010                     	;# 
  1412     0011                     	;# 
  1413     0012                     	;# 
  1414     0013                     	;# 
  1415     0015                     	;# 
  1416     0016                     	;# 
  1417     0016                     	;# 
  1418     0017                     	;# 
  1419     0018                     	;# 
  1420     0019                     	;# 
  1421     001A                     	;# 
  1422     001B                     	;# 
  1423     001C                     	;# 
  1424     001E                     	;# 
  1425     001F                     	;# 
  1426     008C                     	;# 
  1427     008D                     	;# 
  1428     008E                     	;# 
  1429     0090                     	;# 
  1430     0091                     	;# 
  1431     0092                     	;# 
  1432     0093                     	;# 
  1433     0095                     	;# 
  1434     0096                     	;# 
  1435     0097                     	;# 
  1436     0098                     	;# 
  1437     0099                     	;# 
  1438     009A                     	;# 
  1439     009B                     	;# 
  1440     009B                     	;# 
  1441     009C                     	;# 
  1442     009D                     	;# 
  1443     009E                     	;# 
  1444     010C                     	;# 
  1445     010D                     	;# 
  1446     010E                     	;# 
  1447     0110                     	;# 
  1448     0111                     	;# 
  1449     0112                     	;# 
  1450     0113                     	;# 
  1451     0114                     	;# 
  1452     0115                     	;# 
  1453     0116                     	;# 
  1454     0117                     	;# 
  1455     0118                     	;# 
  1456     0119                     	;# 
  1457     011A                     	;# 
  1458     011B                     	;# 
  1459     011D                     	;# 
  1460     018C                     	;# 
  1461     018D                     	;# 
  1462     0191                     	;# 
  1463     0191                     	;# 
  1464     0192                     	;# 
  1465     0193                     	;# 
  1466     0193                     	;# 
  1467     0193                     	;# 
  1468     0194                     	;# 
  1469     0195                     	;# 
  1470     0196                     	;# 
  1471     0199                     	;# 
  1472     019A                     	;# 
  1473     019B                     	;# 
  1474     019B                     	;# 
  1475     019B                     	;# 
  1476     019B                     	;# 
  1477     019C                     	;# 
  1478     019C                     	;# 
  1479     019D                     	;# 
  1480     019E                     	;# 
  1481     019F                     	;# 
  1482     020D                     	;# 
  1483     0210                     	;# 
  1484     0211                     	;# 
  1485     0212                     	;# 
  1486     0213                     	;# 
  1487     0214                     	;# 
  1488     0215                     	;# 
  1489     0215                     	;# 
  1490     0216                     	;# 
  1491     0217                     	;# 
  1492     0291                     	;# 
  1493     0291                     	;# 
  1494     0292                     	;# 
  1495     0293                     	;# 
  1496     0294                     	;# 
  1497     0295                     	;# 
  1498     0295                     	;# 
  1499     0296                     	;# 
  1500     0298                     	;# 
  1501     0298                     	;# 
  1502     0299                     	;# 
  1503     029A                     	;# 
  1504     029B                     	;# 
  1505     029C                     	;# 
  1506     029C                     	;# 
  1507     029D                     	;# 
  1508     029E                     	;# 
  1509     029F                     	;# 
  1510     0311                     	;# 
  1511     0311                     	;# 
  1512     0312                     	;# 
  1513     0313                     	;# 
  1514     0314                     	;# 
  1515     0315                     	;# 
  1516     0315                     	;# 
  1517     0316                     	;# 
  1518     0318                     	;# 
  1519     0318                     	;# 
  1520     0319                     	;# 
  1521     031A                     	;# 
  1522     031C                     	;# 
  1523     031C                     	;# 
  1524     031D                     	;# 
  1525     031E                     	;# 
  1526     0394                     	;# 
  1527     0395                     	;# 
  1528     0396                     	;# 
  1529     0415                     	;# 
  1530     0416                     	;# 
  1531     0417                     	;# 
  1532     041C                     	;# 
  1533     041D                     	;# 
  1534     041E                     	;# 
  1535     0791                     	;# 
  1536     0792                     	;# 
  1537     0793                     	;# 
  1538     0794                     	;# 
  1539     0795                     	;# 
  1540     0798                     	;# 
  1541     0799                     	;# 
  1542     07A0                     	;# 
  1543     07A1                     	;# 
  1544     07A3                     	;# 
  1545     07A4                     	;# 
  1546     07A6                     	;# 
  1547     07A7                     	;# 
  1548     07A9                     	;# 
  1549     07AA                     	;# 
  1550     0FE4                     	;# 
  1551     0FE5                     	;# 
  1552     0FE6                     	;# 
  1553     0FE7                     	;# 
  1554     0FE8                     	;# 
  1555     0FE9                     	;# 
  1556     0FEA                     	;# 
  1557     0FEB                     	;# 
  1558     0FED                     	;# 
  1559     0FEE                     	;# 
  1560     0FEF                     	;# 
  1561                           
  1562 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1563     0000                     
  1564 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1565     0000                     
  1566 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1567     0000                     
  1568                           	psect	idataBANK1
  1569     0185                     __pidataBANK1:
  1570                           
  1571                           ;initializer for _CS
  1572     0185  344C               	retlw	76
  1573     0186  349F               	retlw	159
  1574     0187  34ED               	retlw	237
  1575     0188  3462               	retlw	98
  1576     0189  349A               	retlw	154
  1577     018A  3400               	retlw	0
  1578     018B  3400               	retlw	0
  1579     018C  3400               	retlw	0
  1580     018D  3427               	retlw	39
  1581     018E  3400               	retlw	0
  1582     018F  3400               	retlw	0
  1583     0190  3400               	retlw	0
  1584     0191  3473               	retlw	115
  1585     0192  34A0               	retlw	160
  1586     0193  3471               	retlw	113
  1587     0194  3401               	retlw	1
  1588     0195  348E               	retlw	142
  1589     0196  345D               	retlw	93
  1590     0197  342F               	retlw	47
  1591     0198  34FC               	retlw	252
  1592     0199  3467               	retlw	103
  1593     019A  3400               	retlw	0
  1594     019B  3400               	retlw	0
  1595     019C  3400               	retlw	0
  1596     019D  34DA               	retlw	218
  1597     019E  3400               	retlw	0
  1598     019F  3400               	retlw	0
  1599     01A0  3400               	retlw	0
  1600     01A1  3412               	retlw	18
  1601     01A2  34A0               	retlw	160
  1602     01A3  3471               	retlw	113
  1603     01A4  3401               	retlw	1
  1604     01A5  342D               	retlw	45
  1605     01A6  34FE               	retlw	254
  1606     01A7  348C               	retlw	140
  1607     01A8  345F               	retlw	95
  1608     01A9  342C               	retlw	44
  1609     01AA  3400               	retlw	0
  1610     01AB  3400               	retlw	0
  1611     01AC  3400               	retlw	0
  1612     01AD  3438               	retlw	56
  1613     01AE  34EB               	retlw	235
  1614     01AF  3499               	retlw	153
  1615     01B0  344A               	retlw	74
  1616     01B1  3412               	retlw	18
  1617     01B2  34C1               	retlw	193
  1618     01B3  34B3               	retlw	179
  1619     01B4  3460               	retlw	96
  1620     01B5  34EF               	retlw	239
  1621     01B6  343C               	retlw	60
  1622     01B7  344E               	retlw	78
  1623     01B8  349D               	retlw	157
  1624     01B9  34D1               	retlw	209
  1625     01BA  3400               	retlw	0
  1626     01BB  3400               	retlw	0
  1627     01BC  3400               	retlw	0
  1628     01BD  346C               	retlw	108
  1629     01BE  3400               	retlw	0
  1630     01BF  3400               	retlw	0
  1631     01C0  3400               	retlw	0
  1632     01C1  34D0               	retlw	208
  1633     01C2  3403               	retlw	3
  1634     01C3  3471               	retlw	113
  1635     01C4  34A2               	retlw	162
  1636     0019                     _T1GCONbits	set	25
  1637     0018                     _T1CONbits	set	24
  1638     0018                     _T1CON	set	24
  1639     0016                     _TMR1L	set	22
  1640     0017                     _TMR1H	set	23
  1641     0019                     _T1GCON	set	25
  1642     0015                     _TMR0	set	21
  1643     0011                     _PIR1bits	set	17
  1644     0013                     _PIR3bits	set	19
  1645     000B                     _INTCONbits	set	11
  1646     0095                     _OPTION_REG	set	149
  1647     0095                     _OPTION_REGbits	set	149
  1648     008E                     _TRISC	set	142
  1649     008D                     _TRISB	set	141
  1650     008C                     _TRISA	set	140
  1651     0090                     _TRISE	set	144
  1652     0097                     _WDTCON	set	151
  1653     0098                     _OSCTUNE	set	152
  1654     0099                     _OSCCON	set	153
  1655     0093                     _PIE3bits	set	147
  1656     04D6                     _PLLR	set	1238
  1657     011D                     _APFCON	set	285
  1658     010E                     _LATC	set	270
  1659     010D                     _LATB	set	269
  1660     010C                     _LATA	set	268
  1661     0110                     _LATE	set	272
  1662     0116                     _BORCON	set	278
  1663     010D                     _LATBbits	set	269
  1664     010E                     _LATCbits	set	270
  1665     018C                     _ANSELA	set	396
  1666     018D                     _ANSELB	set	397
  1667     019A                     _TXREG	set	410
  1668     0199                     _RCREG	set	409
  1669     019D                     _RCSTAbits	set	413
  1670     019E                     _TXSTAbits	set	414
  1671     019C                     _SPBRGH	set	412
  1672     019B                     _SPBRGL	set	411
  1673     019E                     _TXSTA	set	414
  1674     019D                     _RCSTA	set	413
  1675     019F                     _BAUDCON	set	415
  1676     020D                     _WPUB	set	525
  1677     0210                     _WPUE	set	528
  1678     0319                     _CCPR4H	set	793
  1679     0318                     _CCPR4L	set	792
  1680     031A                     _CCP4CON	set	794
  1681                           
  1682                           	psect	cinit
  1683     0028                     start_initialization:	
  1684                           ; #config settings
  1685                           
  1686     0028                     __initialization:
  1687                           
  1688                           ; Initialize objects allocated to BANK1
  1689     0028  3085               	movlw	low __pidataBANK1
  1690     0029  0084               	movwf	4
  1691     002A  3081               	movlw	(high __pidataBANK1)| (0+128)
  1692     002B  0085               	movwf	5
  1693     002C  30A0               	movlw	low __pdataBANK1
  1694     002D  0086               	movwf	6
  1695     002E  3000               	movlw	high __pdataBANK1
  1696     002F  0087               	movwf	7
  1697     0030  3040               	movlw	64
  1698     0031  3183  232F  3180   	fcall	init_ram
  1699                           
  1700                           ; Clear objects allocated to COMMON
  1701     0034  01F0               	clrf	__pbssCOMMON& (0+127)
  1702     0035  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1703     0036  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1704     0037  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1705     0038  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1706     0039  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1707                           
  1708                           ; Clear objects allocated to BANK0
  1709     003A  3020               	movlw	low __pbssBANK0
  1710     003B  0084               	movwf	4
  1711     003C  3000               	movlw	high __pbssBANK0
  1712     003D  0085               	movwf	5
  1713     003E  302D               	movlw	45
  1714     003F  3183  2335  3180   	fcall	clear_ram0
  1715     0042                     end_of_initialization:	
  1716                           ;End of C runtime variable initialization code
  1717                           
  1718     0042                     __end_of__initialization:
  1719     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1720     0043  0020               	movlb	0
  1721     0044  3182  2A56         	ljmp	_main	;jump to C main() function
  1722                           
  1723                           	psect	bssCOMMON
  1724     0070                     __pbssCOMMON:
  1725     0070                     _timer0ReloadVal:
  1726     0070                     	ds	1
  1727     0071                     CCP4_EvenHandler@HI_us:
  1728     0071                     	ds	1
  1729     0072                     _LED_STEP:
  1730     0072                     	ds	1
  1731     0073                     _csFlag:
  1732     0073                     	ds	1
  1733     0074                     _D2:
  1734     0074                     	ds	1
  1735     0075                     _rx_data:
  1736     0075                     	ds	1
  1737                           
  1738                           	psect	bssBANK0
  1739     0020                     __pbssBANK0:
  1740     0020                     _data_buf:
  1741     0020                     	ds	11
  1742     002B                     _timer1ReloadVal:
  1743     002B                     	ds	2
  1744     002D                     TMR0_ISR@CountCallBack:
  1745     002D                     	ds	2
  1746     002F                     _TMR0_InterruptHandler:
  1747     002F                     	ds	2
  1748     0031                     _EUSART_ErrorHandler:
  1749     0031                     	ds	2
  1750     0033                     _EUSART_OverrunErrorHandler:
  1751     0033                     	ds	2
  1752     0035                     _EUSART_FramingErrorHandler:
  1753     0035                     	ds	2
  1754     0037                     _CCP4_CallBack:
  1755     0037                     	ds	2
  1756     0039                     CCP4_EvenHandler@rising_edge_time:
  1757     0039                     	ds	2
  1758     003B                     CCP4_EvenHandler@falling_edge_time:
  1759     003B                     	ds	2
  1760     003D                     CCP4_EvenHandler@pluse_width_HI:
  1761     003D                     	ds	2
  1762     003F                     CCP4_EvenHandler@pluse_width_LO:
  1763     003F                     	ds	2
  1764     0041                     _eusartRxLastError:
  1765     0041                     	ds	1
  1766     0042                     CCP4_EvenHandler@data_cnt:
  1767     0042                     	ds	1
  1768     0043                     CCP4_EvenHandler@fHead:
  1769     0043                     	ds	1
  1770     0044                     CCP4_EvenHandler@rise_edge_flag:
  1771     0044                     	ds	1
  1772     0045                     CCP4_EvenHandler@diff_us:
  1773     0045                     	ds	1
  1774     0046                     CCP4_EvenHandler@LO_us:
  1775     0046                     	ds	1
  1776     0047                     _fSerialStart_Right:
  1777     0047                     	ds	1
  1778     0048                     _fSerialStart_Left:
  1779     0048                     	ds	1
  1780     0049                     _D3:
  1781     0049                     	ds	1
  1782     004A                     _step:
  1783     004A                     	ds	1
  1784     004B                     _fFrame_OK:
  1785     004B                     	ds	1
  1786     004C                     _data_1byte_OK:
  1787     004C                     	ds	1
  1788                           
  1789                           	psect	dataBANK1
  1790     00A0                     __pdataBANK1:
  1791     00A0                     _CS:
  1792     00A0                     	ds	64
  1793                           
  1794                           	psect	inittext
  1795     032F                     init_ram:
  1796     032F  00FE               	movwf	btemp
  1797     0330                     initloop:
  1798     0330  0012               	moviw fsr0++
  1799     0331  001E               	movwi fsr1++
  1800     0332  0BFE               	decfsz	btemp,f
  1801     0333  2B30               	goto	initloop
  1802     0334  3400               	retlw	0
  1803                           
  1804                           	psect	clrtext
  1805     0335                     clear_ram0:	
  1806                           ;	Called with FSR0 containing the base address, and
  1807                           ;	WREG with the size to clear
  1808                           
  1809     0335  0064               	clrwdt	;clear the watchdog before getting into this loop
  1810     0336                     clrloop0:
  1811     0336  0180               	clrf	0	;clear RAM location pointed to by FSR
  1812     0337  3101               	addfsr 0,1
  1813     0338  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1814     0339  2B36               	goto	clrloop0	;have we reached the end yet?
  1815     033A  3400               	retlw	0	;all done for this memory range, return
  1816                           
  1817                           	psect	cstackCOMMON
  1818     0076                     __pcstackCOMMON:
  1819     0076                     ?_SYSTEM_Initialize:
  1820     0076                     ?_TMR0_ISR:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823     0076                     ?_PIN_MANAGER_Initialize:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826     0076                     ?_OSCILLATOR_Initialize:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829     0076                     ?_WDT_Initialize:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832     0076                     ?_TMR1_Initialize:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835     0076                     ?_TMR0_Initialize:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838     0076                     ?_TMR0_DefaultInterruptHandler:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841     0076                     ??_TMR0_DefaultInterruptHandler:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844     0076                     ?_TMR0_CallBack:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847     0076                     ?_LED_output:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850     0076                     ?_check_input:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853     0076                     ?_getFrameData:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856     0076                     ?_CCP4_EvenHandler:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859     0076                     ?_TMR0_EvenHandler:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862     0076                     ??_TMR0_EvenHandler:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865     0076                     ?_main:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868     0076                     ?_CCP4_DefaultCallBack:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871     0076                     ?_CCP4_Initialize:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     0076                     ?_CCP4_CaptureISR:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     0076                     ?_EUSART_Initialize:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0076                     ?_INTERRUPT_InterruptManager:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0076                     CCP4_EvenHandler@capturedValue:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0076                     CCP4_DefaultCallBack@capturedValue:	
  1887                           ; 2 bytes @ 0x0
  1888                           
  1889                           
  1890                           ; 2 bytes @ 0x0
  1891     0076                     	ds	1
  1892     0077                     ??_TMR0_ISR:
  1893     0077                     ??_TMR0_CallBack:	
  1894                           ; 1 bytes @ 0x1
  1895                           
  1896                           
  1897                           ; 1 bytes @ 0x1
  1898     0077                     	ds	1
  1899     0078                     ??_CCP4_EvenHandler:
  1900     0078                     ??_CCP4_DefaultCallBack:	
  1901                           ; 1 bytes @ 0x2
  1902                           
  1903                           
  1904                           ; 1 bytes @ 0x2
  1905     0078                     	ds	2
  1906     007A                     ??_CCP4_CaptureISR:
  1907     007A                     CCP4_CaptureISR@module:	
  1908                           ; 1 bytes @ 0x4
  1909                           
  1910                           
  1911                           ; 2 bytes @ 0x4
  1912     007A                     	ds	2
  1913     007C                     ??_INTERRUPT_InterruptManager:
  1914                           
  1915                           	psect	cstackBANK0
  1916     004D                     __pcstackBANK0:	
  1917                           ; 1 bytes @ 0x6
  1918                           
  1919     004D                     ?_CCP4_SetCallBack:
  1920     004D                     ?_TMR0_SetInterruptHandler:	
  1921                           ; 1 bytes @ 0x0
  1922                           
  1923     004D                     ?_EUSART_SetFramingErrorHandler:	
  1924                           ; 1 bytes @ 0x0
  1925                           
  1926     004D                     ?_EUSART_SetOverrunErrorHandler:	
  1927                           ; 1 bytes @ 0x0
  1928                           
  1929     004D                     ?_EUSART_SetErrorHandler:	
  1930                           ; 1 bytes @ 0x0
  1931                           
  1932     004D                     ??_PIN_MANAGER_Initialize:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935     004D                     ??_OSCILLATOR_Initialize:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938     004D                     ??_WDT_Initialize:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941     004D                     ??_TMR1_Initialize:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944     004D                     ??_LED_output:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947     004D                     ??_check_input:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950     004D                     ??_getFrameData:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953     004D                     LED_output@crc8:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956     004D                     CCP4_SetCallBack@customCallBack:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959     004D                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1960                           ; 2 bytes @ 0x0
  1961                           
  1962     004D                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1963                           ; 2 bytes @ 0x0
  1964                           
  1965     004D                     EUSART_SetErrorHandler@interruptHandler:	
  1966                           ; 2 bytes @ 0x0
  1967                           
  1968     004D                     TMR0_SetInterruptHandler@InterruptHandler:	
  1969                           ; 2 bytes @ 0x0
  1970                           
  1971                           
  1972                           ; 2 bytes @ 0x0
  1973     004D                     	ds	2
  1974     004F                     ??_SYSTEM_Initialize:
  1975     004F                     ??_CCP4_SetCallBack:	
  1976                           ; 1 bytes @ 0x2
  1977                           
  1978     004F                     ??_TMR0_SetInterruptHandler:	
  1979                           ; 1 bytes @ 0x2
  1980                           
  1981     004F                     ??_EUSART_SetFramingErrorHandler:	
  1982                           ; 1 bytes @ 0x2
  1983                           
  1984     004F                     ??_EUSART_SetOverrunErrorHandler:	
  1985                           ; 1 bytes @ 0x2
  1986                           
  1987     004F                     ??_EUSART_SetErrorHandler:	
  1988                           ; 1 bytes @ 0x2
  1989                           
  1990     004F                     ??_TMR0_Initialize:	
  1991                           ; 1 bytes @ 0x2
  1992                           
  1993     004F                     ??_main:	
  1994                           ; 1 bytes @ 0x2
  1995                           
  1996     004F                     ??_CCP4_Initialize:	
  1997                           ; 1 bytes @ 0x2
  1998                           
  1999     004F                     ??_EUSART_Initialize:	
  2000                           ; 1 bytes @ 0x2
  2001                           
  2002                           
  2003                           	psect	maintext
  2004     0256                     __pmaintext:	
  2005                           ; 1 bytes @ 0x2
  2006 ;;
  2007 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2008 ;;
  2009 ;; *************** function _main *****************
  2010 ;; Defined at:
  2011 ;;		line 579 in file "D:\yiming\work\TOYOTA_RX_serial.X\main.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : B1F/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2025 ;;      Params:         0       0       0       0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels required when called: 7
  2031 ;; This function calls:
  2032 ;;		_CCP4_SetCallBack
  2033 ;;		_LED_output
  2034 ;;		_SYSTEM_Initialize
  2035 ;;		_TMR0_SetInterruptHandler
  2036 ;;		_check_input
  2037 ;;		_getFrameData
  2038 ;; This function is called by:
  2039 ;;		Startup code after reset
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043     0256                     _main:	
  2044                           ;psect for function _main
  2045                           
  2046     0256                     l2180:	
  2047                           ;incstack = 0
  2048                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2049                           
  2050                           
  2051                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 581:   SYSTEM_Initialize();
  2052     0256  3182  22AB  3182   	fcall	_SYSTEM_Initialize
  2053                           
  2054                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 582:   CCP4_SetCallBack(CCP4_EvenHandler);
  2055     0259  3046               	movlw	low _CCP4_EvenHandler
  2056     025A  0020               	movlb	0	; select bank0
  2057     025B  00CD               	movwf	CCP4_SetCallBack@customCallBack
  2058     025C  3000               	movlw	high _CCP4_EvenHandler
  2059     025D  00CE               	movwf	CCP4_SetCallBack@customCallBack+1
  2060     025E  3183  2353  3182   	fcall	_CCP4_SetCallBack
  2061                           
  2062                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 583:   TMR0_SetInterruptHandler(TMR0_EvenHand
      +                          ler);
  2063     0261  30F9               	movlw	low _TMR0_EvenHandler
  2064     0262  0020               	movlb	0	; select bank0
  2065     0263  00CD               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2066     0264  3002               	movlw	high _TMR0_EvenHandler
  2067     0265  00CE               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2068     0266  3183  233B  3182   	fcall	_TMR0_SetInterruptHandler
  2069     0269                     l2182:
  2070                           
  2071                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 589:   (INTCONbits.GIE = 1);
  2072     0269  178B               	bsf	11,7	;volatile
  2073     026A                     l2184:
  2074                           
  2075                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 592:   (INTCONbits.PEIE = 1);
  2076     026A  170B               	bsf	11,6	;volatile
  2077     026B                     l2186:
  2078                           
  2079                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 601:     getFrameData();
  2080     026B  3181  2114  3182   	fcall	_getFrameData
  2081     026E                     l2188:
  2082                           
  2083                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 602:     check_input();
  2084     026E  3181  21FF  3182   	fcall	_check_input
  2085     0271                     l2190:
  2086                           
  2087                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 603:     LED_output();
  2088     0271  3181  21C5  3182   	fcall	_LED_output
  2089     0274  2A6B               	goto	l2186
  2090     0275  3180  2826         	ljmp	start
  2091     0277                     __end_of_main:
  2092                           
  2093                           	psect	text1
  2094     0114                     __ptext1:	
  2095 ;; *************** function _getFrameData *****************
  2096 ;; Defined at:
  2097 ;;		line 429 in file "D:\yiming\work\TOYOTA_RX_serial.X\main.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2111 ;;      Params:         0       0       0       0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 4
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125     0114                     _getFrameData:	
  2126                           ;psect for function _getFrameData
  2127                           
  2128     0114                     l2132:	
  2129                           ;incstack = 0
  2130                           ; Regs used in _getFrameData: [wreg-fsr0h+status,2+status,0]
  2131                           
  2132                           
  2133                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 430:   if (data_1byte_OK == 1) {
  2134     0114  0020               	movlb	0	; select bank0
  2135     0115  034C               	decf	_data_1byte_OK,w	;volatile
  2136     0116  1D03               	btfss	3,2
  2137     0117  2919               	goto	u1251
  2138     0118  291A               	goto	u1250
  2139     0119                     u1251:
  2140     0119  2984               	goto	l257
  2141     011A                     u1250:
  2142     011A                     l2134:
  2143                           
  2144                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 431:     data_1byte_OK = 0;
  2145     011A  01CC               	clrf	_data_1byte_OK	;volatile
  2146                           
  2147                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 434:     switch (step) {
  2148     011B  2961               	goto	l2176
  2149     011C                     l2136:
  2150                           
  2151                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 436:       if (rx_data == 0xC8) {
  2152     011C  30C8               	movlw	200
  2153     011D  0675               	xorwf	_rx_data,w
  2154     011E  1D03               	btfss	3,2
  2155     011F  2921               	goto	u1261
  2156     0120  2922               	goto	u1260
  2157     0121                     u1261:
  2158     0121  2927               	goto	l2142
  2159     0122                     u1260:
  2160     0122                     l2138:
  2161                           
  2162                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 437:         step = 1;
  2163     0122  01CA               	clrf	_step
  2164     0123  0ACA               	incf	_step,f
  2165     0124                     l2140:
  2166                           
  2167                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 438:         data_buf[0] = rx_data;
  2168     0124  0875               	movf	_rx_data,w
  2169     0125  00A0               	movwf	_data_buf
  2170                           
  2171                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 439:       } else {
  2172     0126  2984               	goto	l257
  2173     0127                     l2142:
  2174                           
  2175                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 440:         step = 0;
  2176     0127  01CA               	clrf	_step
  2177     0128  2984               	goto	l257
  2178     0129                     l2144:
  2179                           
  2180                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 444:       if (rx_data == 0x8B) {
  2181     0129  308B               	movlw	139
  2182     012A  0675               	xorwf	_rx_data,w
  2183     012B  1D03               	btfss	3,2
  2184     012C  292E               	goto	u1271
  2185     012D  292F               	goto	u1270
  2186     012E                     u1271:
  2187     012E  2927               	goto	l2142
  2188     012F                     u1270:
  2189     012F                     l2146:
  2190                           
  2191                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 445:         data_buf[1] = rx_data;
  2192     012F  0875               	movf	_rx_data,w
  2193     0130  00A1               	movwf	_data_buf+1
  2194                           
  2195                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 446:         step = 2;
  2196     0131  3002               	movlw	2
  2197     0132  00CA               	movwf	_step
  2198                           
  2199                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 447:       } else {
  2200     0133  2984               	goto	l257
  2201     0134                     l2150:
  2202                           
  2203                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 452:       data_buf[2] = rx_data;
  2204     0134  0875               	movf	_rx_data,w
  2205     0135  00A2               	movwf	_data_buf+2
  2206                           
  2207                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 453:       step = 3;
  2208     0136  3003               	movlw	3
  2209     0137  00CA               	movwf	_step
  2210                           
  2211                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 454:       break;
  2212     0138  2984               	goto	l257
  2213     0139                     l2152:
  2214                           
  2215                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 456:       data_buf[3] = rx_data;
  2216     0139  0875               	movf	_rx_data,w
  2217     013A  00A3               	movwf	_data_buf+3
  2218                           
  2219                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 457:       step = 4;
  2220     013B  3004               	movlw	4
  2221     013C  00CA               	movwf	_step
  2222                           
  2223                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 458:       break;
  2224     013D  2984               	goto	l257
  2225     013E                     l2154:
  2226                           
  2227                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 460:       data_buf[4] = rx_data;
  2228     013E  0875               	movf	_rx_data,w
  2229     013F  00A4               	movwf	_data_buf+4
  2230                           
  2231                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 461:       step = 5;
  2232     0140  3005               	movlw	5
  2233     0141  00CA               	movwf	_step
  2234                           
  2235                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 462:       break;
  2236     0142  2984               	goto	l257
  2237     0143                     l2156:
  2238                           
  2239                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 464:       data_buf[5] = rx_data;
  2240     0143  0875               	movf	_rx_data,w
  2241     0144  00A5               	movwf	_data_buf+5
  2242                           
  2243                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 465:       step = 6;
  2244     0145  3006               	movlw	6
  2245     0146  00CA               	movwf	_step
  2246                           
  2247                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 466:       break;
  2248     0147  2984               	goto	l257
  2249     0148                     l2158:
  2250                           
  2251                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 468:       data_buf[6] = rx_data;
  2252     0148  0875               	movf	_rx_data,w
  2253     0149  00A6               	movwf	_data_buf+6
  2254                           
  2255                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 469:       step = 7;
  2256     014A  3007               	movlw	7
  2257     014B  00CA               	movwf	_step
  2258                           
  2259                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 470:       break;
  2260     014C  2984               	goto	l257
  2261     014D                     l2160:
  2262                           
  2263                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 472:       data_buf[7] = rx_data;
  2264     014D  0875               	movf	_rx_data,w
  2265     014E  00A7               	movwf	_data_buf+7
  2266                           
  2267                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 473:       step = 8;
  2268     014F  3008               	movlw	8
  2269     0150  00CA               	movwf	_step
  2270                           
  2271                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 474:       break;
  2272     0151  2984               	goto	l257
  2273     0152                     l2162:
  2274                           
  2275                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 476:       data_buf[8] = rx_data;
  2276     0152  0875               	movf	_rx_data,w
  2277     0153  00A8               	movwf	_data_buf+8
  2278                           
  2279                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 477:       step = 9;
  2280     0154  3009               	movlw	9
  2281     0155  00CA               	movwf	_step
  2282                           
  2283                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 478:       break;
  2284     0156  2984               	goto	l257
  2285     0157                     l2164:
  2286                           
  2287                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 480:       data_buf[9] = rx_data;
  2288     0157  0875               	movf	_rx_data,w
  2289     0158  00A9               	movwf	_data_buf+9
  2290                           
  2291                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 481:       step = 10;
  2292     0159  300A               	movlw	10
  2293     015A  00CA               	movwf	_step
  2294                           
  2295                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 482:       break;
  2296     015B  2984               	goto	l257
  2297     015C                     l2166:
  2298                           
  2299                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 484:       data_buf[10] = rx_data;
  2300     015C  0875               	movf	_rx_data,w
  2301     015D  00AA               	movwf	_data_buf+10
  2302     015E                     l2168:
  2303                           
  2304                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 485:       fFrame_OK = 1;
  2305     015E  01CB               	clrf	_fFrame_OK
  2306     015F  0ACB               	incf	_fFrame_OK,f
  2307     0160  2927               	goto	l2142
  2308     0161                     l2176:
  2309     0161  084A               	movf	_step,w
  2310                           
  2311                           ; Switch size 1, requested type "simple"
  2312                           ; Number of cases is 11, Range of values is 0 to 10
  2313                           ; switch strategies available:
  2314                           ; Name         Instructions Cycles
  2315                           ; direct_byte           28     6 (fixed)
  2316                           ; simple_byte           34    18 (average)
  2317                           ; jumptable            260     6 (fixed)
  2318                           ;	Chosen strategy is simple_byte
  2319     0162  3A00               	xorlw	0	; case 0
  2320     0163  1903               	skipnz
  2321     0164  291C               	goto	l2136
  2322     0165  3A01               	xorlw	1	; case 1
  2323     0166  1903               	skipnz
  2324     0167  2929               	goto	l2144
  2325     0168  3A03               	xorlw	3	; case 2
  2326     0169  1903               	skipnz
  2327     016A  2934               	goto	l2150
  2328     016B  3A01               	xorlw	1	; case 3
  2329     016C  1903               	skipnz
  2330     016D  2939               	goto	l2152
  2331     016E  3A07               	xorlw	7	; case 4
  2332     016F  1903               	skipnz
  2333     0170  293E               	goto	l2154
  2334     0171  3A01               	xorlw	1	; case 5
  2335     0172  1903               	skipnz
  2336     0173  2943               	goto	l2156
  2337     0174  3A03               	xorlw	3	; case 6
  2338     0175  1903               	skipnz
  2339     0176  2948               	goto	l2158
  2340     0177  3A01               	xorlw	1	; case 7
  2341     0178  1903               	skipnz
  2342     0179  294D               	goto	l2160
  2343     017A  3A0F               	xorlw	15	; case 8
  2344     017B  1903               	skipnz
  2345     017C  2952               	goto	l2162
  2346     017D  3A01               	xorlw	1	; case 9
  2347     017E  1903               	skipnz
  2348     017F  2957               	goto	l2164
  2349     0180  3A03               	xorlw	3	; case 10
  2350     0181  1903               	skipnz
  2351     0182  295C               	goto	l2166
  2352     0183  2927               	goto	l2142
  2353     0184                     l257:
  2354     0184  0008               	return
  2355     0185                     __end_of_getFrameData:
  2356                           
  2357                           	psect	text2
  2358     01FF                     __ptext2:	
  2359 ;; *************** function _check_input *****************
  2360 ;; Defined at:
  2361 ;;		line 387 in file "D:\yiming\work\TOYOTA_RX_serial.X\main.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2375 ;;      Params:         0       0       0       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0
  2378 ;;      Totals:         0       0       0       0       0       0       0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 4
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_main
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389     01FF                     _check_input:	
  2390                           ;psect for function _check_input
  2391                           
  2392     01FF                     l2114:	
  2393                           ;incstack = 0
  2394                           ; Regs used in _check_input: [wreg+status,2]
  2395                           
  2396                           
  2397                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 388:   D2.Byte = data_buf[2];
  2398     01FF  0020               	movlb	0	; select bank0
  2399     0200  0822               	movf	_data_buf+2,w
  2400     0201  00F4               	movwf	_D2
  2401                           
  2402                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 389:   D3.Byte = data_buf[3];
  2403     0202  0823               	movf	_data_buf+3,w
  2404     0203  00C9               	movwf	_D3
  2405     0204                     l2116:
  2406                           
  2407                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 390:   csFlag.Byte = 0;
  2408     0204  01F3               	clrf	_csFlag
  2409     0205                     l2118:
  2410                           
  2411                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 393:   if (D2.RunLight == 1)
  2412     0205  1D74               	btfss	_D2,2
  2413     0206  2A08               	goto	u1191
  2414     0207  2A09               	goto	u1190
  2415     0208                     u1191:
  2416     0208  2A0B               	goto	l223
  2417     0209                     u1190:
  2418     0209                     l2120:
  2419                           
  2420                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 394:     csFlag.RunLight = 1;
  2421     0209  16F3               	bsf	_csFlag,5
  2422     020A  2A0C               	goto	l224
  2423     020B                     l223:	
  2424                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 395:   else
  2425                           
  2426                           
  2427                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 396:     csFlag.RunLight = 0;
  2428     020B  12F3               	bcf	_csFlag,5
  2429     020C                     l224:
  2430                           
  2431                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 399:   if (D2.DRL == 1)
  2432     020C  1DF4               	btfss	_D2,3
  2433     020D  2A0F               	goto	u1201
  2434     020E  2A10               	goto	u1200
  2435     020F                     u1201:
  2436     020F  2A12               	goto	l225
  2437     0210                     u1200:
  2438     0210                     l2122:
  2439                           
  2440                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 400:     csFlag.DRL = 1;
  2441     0210  1673               	bsf	_csFlag,4
  2442     0211  2A13               	goto	l226
  2443     0212                     l225:	
  2444                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 401:   else
  2445                           
  2446                           
  2447                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 402:     csFlag.DRL = 0;
  2448     0212  1273               	bcf	_csFlag,4
  2449     0213                     l226:
  2450                           
  2451                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 405:   if (D2.LoBeam == 1)
  2452     0213  1E74               	btfss	_D2,4
  2453     0214  2A16               	goto	u1211
  2454     0215  2A17               	goto	u1210
  2455     0216                     u1211:
  2456     0216  2A19               	goto	l227
  2457     0217                     u1210:
  2458     0217                     l2124:
  2459                           
  2460                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 406:     csFlag.LoBeam = 1;
  2461     0217  15F3               	bsf	_csFlag,3
  2462     0218  2A1A               	goto	l228
  2463     0219                     l227:	
  2464                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 407:   else
  2465                           
  2466                           
  2467                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 408:     csFlag.LoBeam = 0;
  2468     0219  11F3               	bcf	_csFlag,3
  2469     021A                     l228:
  2470                           
  2471                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 411:   if (D2.HiBeam == 1)
  2472     021A  1EF4               	btfss	_D2,5
  2473     021B  2A1D               	goto	u1221
  2474     021C  2A1E               	goto	u1220
  2475     021D                     u1221:
  2476     021D  2A20               	goto	l229
  2477     021E                     u1220:
  2478     021E                     l2126:
  2479                           
  2480                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 412:     csFlag.HiBeam = 1;
  2481     021E  1573               	bsf	_csFlag,2
  2482     021F  2A21               	goto	l230
  2483     0220                     l229:	
  2484                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 413:   else
  2485                           
  2486                           
  2487                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 414:     csFlag.HiBeam = 0;
  2488     0220  1173               	bcf	_csFlag,2
  2489     0221                     l230:
  2490                           
  2491                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 417:   if (D3.turnLight_L == 1)
  2492     0221  1EC9               	btfss	_D3,5
  2493     0222  2A24               	goto	u1231
  2494     0223  2A25               	goto	u1230
  2495     0224                     u1231:
  2496     0224  2A27               	goto	l231
  2497     0225                     u1230:
  2498     0225                     l2128:
  2499                           
  2500                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 418:     csFlag.turnLight_L = 1;
  2501     0225  14F3               	bsf	_csFlag,1
  2502     0226  2A28               	goto	l232
  2503     0227                     l231:	
  2504                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 419:   else
  2505                           
  2506                           
  2507                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 420:     csFlag.turnLight_L = 0;
  2508     0227  10F3               	bcf	_csFlag,1
  2509     0228                     l232:
  2510                           
  2511                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 423:   if (D3.turnLight_R == 1)
  2512     0228  1F49               	btfss	_D3,6
  2513     0229  2A2B               	goto	u1241
  2514     022A  2A2C               	goto	u1240
  2515     022B                     u1241:
  2516     022B  2A2E               	goto	l233
  2517     022C                     u1240:
  2518     022C                     l2130:
  2519                           
  2520                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 424:     csFlag.turnLight_R = 1;
  2521     022C  1473               	bsf	_csFlag,0
  2522     022D  2A2F               	goto	l235
  2523     022E                     l233:	
  2524                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 425:   else
  2525                           
  2526                           
  2527                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 426:     csFlag.turnLight_R = 0;
  2528     022E  1073               	bcf	_csFlag,0
  2529     022F                     l235:
  2530     022F  0008               	return
  2531     0230                     __end_of_check_input:
  2532                           
  2533                           	psect	text3
  2534     02AB                     __ptext3:	
  2535 ;; *************** function _SYSTEM_Initialize *****************
  2536 ;; Defined at:
  2537 ;;		line 50 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2551 ;;      Params:         0       0       0       0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0
  2554 ;;      Totals:         0       0       0       0       0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 6
  2558 ;; This function calls:
  2559 ;;		_CCP4_Initialize
  2560 ;;		_EUSART_Initialize
  2561 ;;		_OSCILLATOR_Initialize
  2562 ;;		_PIN_MANAGER_Initialize
  2563 ;;		_TMR0_Initialize
  2564 ;;		_TMR1_Initialize
  2565 ;;		_WDT_Initialize
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571     02AB                     _SYSTEM_Initialize:	
  2572                           ;psect for function _SYSTEM_Initialize
  2573                           
  2574     02AB                     l2178:	
  2575                           ;incstack = 0
  2576                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2577                           
  2578                           
  2579                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 53:     PIN_MANAGER_Initia
      +                          lize();
  2580     02AB  3182  2277  3182   	fcall	_PIN_MANAGER_Initialize
  2581                           
  2582                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 54:     OSCILLATOR_Initial
      +                          ize();
  2583     02AE  3183  2323  3182   	fcall	_OSCILLATOR_Initialize
  2584                           
  2585                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 55:     WDT_Initialize();
  2586     02B1  3183  2359  3182   	fcall	_WDT_Initialize
  2587                           
  2588                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 56:     CCP4_Initialize();
  2589     02B4  3182  22D5  3182   	fcall	_CCP4_Initialize
  2590                           
  2591                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 57:     TMR1_Initialize();
  2592     02B7  3183  2309  3182   	fcall	_TMR1_Initialize
  2593                           
  2594                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 58:     TMR0_Initialize();
  2595     02BA  3182  22C1  3182   	fcall	_TMR0_Initialize
  2596                           
  2597                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 59:     EUSART_Initialize(
      +                          );
  2598     02BD  3182  2230  3182   	fcall	_EUSART_Initialize
  2599     02C0                     l486:
  2600     02C0  0008               	return
  2601     02C1                     __end_of_SYSTEM_Initialize:
  2602                           
  2603                           	psect	text4
  2604     0359                     __ptext4:	
  2605 ;; *************** function _WDT_Initialize *****************
  2606 ;; Defined at:
  2607 ;;		line 76 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2621 ;;      Params:         0       0       0       0       0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0
  2624 ;;      Totals:         0       0       0       0       0       0       0       0
  2625 ;;Total ram usage:        0 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 4
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_SYSTEM_Initialize
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635     0359                     _WDT_Initialize:	
  2636                           ;psect for function _WDT_Initialize
  2637                           
  2638     0359                     l2086:	
  2639                           ;incstack = 0
  2640                           ; Regs used in _WDT_Initialize: [wreg]
  2641                           
  2642                           
  2643                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 79:     WDTCON = 0x16;
  2644     0359  3016               	movlw	22
  2645     035A  0021               	movlb	1	; select bank1
  2646     035B  0097               	movwf	23	;volatile
  2647     035C                     l495:
  2648     035C  0008               	return
  2649     035D                     __end_of_WDT_Initialize:
  2650                           
  2651                           	psect	text5
  2652     0309                     __ptext5:	
  2653 ;; *************** function _TMR1_Initialize *****************
  2654 ;; Defined at:
  2655 ;;		line 63 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr1.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2669 ;;      Params:         0       0       0       0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0
  2672 ;;      Totals:         0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 4
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_SYSTEM_Initialize
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683     0309                     _TMR1_Initialize:	
  2684                           ;psect for function _TMR1_Initialize
  2685                           
  2686     0309                     l2088:	
  2687                           ;incstack = 0
  2688                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  2689                           
  2690                           
  2691                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr1.c: 68:     T1GCON = 0x10;
  2692     0309  3010               	movlw	16
  2693     030A  0020               	movlb	0	; select bank0
  2694     030B  0099               	movwf	25	;volatile
  2695     030C                     l2090:
  2696                           
  2697                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr1.c: 71:     TMR1H = 0x00;
  2698     030C  0197               	clrf	23	;volatile
  2699     030D                     l2092:
  2700                           
  2701                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr1.c: 74:     TMR1L = 0x00;
  2702     030D  0196               	clrf	22	;volatile
  2703     030E                     l2094:
  2704                           
  2705                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr1.c: 77:     PIR1bits.TMR1IF =
      +                           0;
  2706     030E  1011               	bcf	17,0	;volatile
  2707                           
  2708                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr1.c: 80:     timer1ReloadVal=(
      +                          uint16_t)((TMR1H << 8) | TMR1L);
  2709     030F  0817               	movf	23,w	;volatile
  2710     0310  00AC               	movwf	_timer1ReloadVal+1	;volatile
  2711     0311  0816               	movf	22,w	;volatile
  2712     0312  00AB               	movwf	_timer1ReloadVal	;volatile
  2713                           
  2714                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr1.c: 83:     T1CON = 0x01;
  2715     0313  3001               	movlw	1
  2716     0314  0098               	movwf	24	;volatile
  2717     0315                     l592:
  2718     0315  0008               	return
  2719     0316                     __end_of_TMR1_Initialize:
  2720                           
  2721                           	psect	text6
  2722     02C1                     __ptext6:	
  2723 ;; *************** function _TMR0_Initialize *****************
  2724 ;; Defined at:
  2725 ;;		line 64 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0, pclath, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2739 ;;      Params:         0       0       0       0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 5
  2746 ;; This function calls:
  2747 ;;		_TMR0_SetInterruptHandler
  2748 ;; This function is called by:
  2749 ;;		_SYSTEM_Initialize
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753     02C1                     _TMR0_Initialize:	
  2754                           ;psect for function _TMR0_Initialize
  2755                           
  2756     02C1                     l2096:	
  2757                           ;incstack = 0
  2758                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2759                           
  2760                           
  2761                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 69:     OPTION_REG = (uin
      +                          t8_t)((OPTION_REG & 0xC0) | (0xD4 & 0x3F));
  2762     02C1  0021               	movlb	1	; select bank1
  2763     02C2  0815               	movf	21,w	;volatile
  2764     02C3  39C0               	andlw	192
  2765     02C4  3814               	iorlw	20
  2766     02C5  0095               	movwf	21	;volatile
  2767     02C6                     l2098:
  2768                           
  2769                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 72:     TMR0 = 0x06;
  2770     02C6  3006               	movlw	6
  2771     02C7  0020               	movlb	0	; select bank0
  2772     02C8  0095               	movwf	21	;volatile
  2773     02C9                     l2100:
  2774                           
  2775                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 75:     timer0ReloadVal= 
      +                          6;
  2776     02C9  3006               	movlw	6
  2777     02CA  00F0               	movwf	_timer0ReloadVal	;volatile
  2778     02CB                     l2102:
  2779                           
  2780                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 78:     INTCONbits.TMR0IF
      +                           = 0;
  2781     02CB  110B               	bcf	11,2	;volatile
  2782     02CC                     l2104:
  2783                           
  2784                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 81:     INTCONbits.TMR0IE
      +                           = 1;
  2785     02CC  168B               	bsf	11,5	;volatile
  2786     02CD                     l2106:
  2787                           
  2788                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 84:     TMR0_SetInterrupt
      +                          Handler(TMR0_DefaultInterruptHandler);
  2789     02CD  305D               	movlw	low _TMR0_DefaultInterruptHandler
  2790     02CE  00CD               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2791     02CF  3003               	movlw	high _TMR0_DefaultInterruptHandler
  2792     02D0  00CE               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2793     02D1  3183  233B  3182   	fcall	_TMR0_SetInterruptHandler
  2794     02D4                     l548:
  2795     02D4  0008               	return
  2796     02D5                     __end_of_TMR0_Initialize:
  2797                           
  2798                           	psect	text7
  2799     033B                     __ptext7:	
  2800 ;; *************** function _TMR0_SetInterruptHandler *****************
  2801 ;; Defined at:
  2802 ;;		line 140 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2805 ;;		 -> TMR0_DefaultInterruptHandler(1), TMR0_EvenHandler(1), 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2817 ;;      Params:         0       2       0       0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0
  2820 ;;      Totals:         0       2       0       0       0       0       0       0
  2821 ;;Total ram usage:        2 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 4
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;;		_TMR0_Initialize
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832     033B                     _TMR0_SetInterruptHandler:	
  2833                           ;psect for function _TMR0_SetInterruptHandler
  2834                           
  2835     033B                     l2026:	
  2836                           ;incstack = 0
  2837                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2838                           
  2839                           
  2840                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 141:     TMR0_InterruptHa
      +                          ndler = InterruptHandler;
  2841     033B  0020               	movlb	0	; select bank0
  2842     033C  084E               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2843     033D  00B0               	movwf	_TMR0_InterruptHandler+1
  2844     033E  084D               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2845     033F  00AF               	movwf	_TMR0_InterruptHandler
  2846     0340                     l570:
  2847     0340  0008               	return
  2848     0341                     __end_of_TMR0_SetInterruptHandler:
  2849                           
  2850                           	psect	text8
  2851     0277                     __ptext8:	
  2852 ;; *************** function _PIN_MANAGER_Initialize *****************
  2853 ;; Defined at:
  2854 ;;		line 55 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2868 ;;      Params:         0       0       0       0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0
  2871 ;;      Totals:         0       0       0       0       0       0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 4
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_SYSTEM_Initialize
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882     0277                     _PIN_MANAGER_Initialize:	
  2883                           ;psect for function _PIN_MANAGER_Initialize
  2884                           
  2885     0277                     l2056:	
  2886                           ;incstack = 0
  2887                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2888                           
  2889                           
  2890                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 60:     LATE = 0x0
      +                          0;
  2891     0277  0022               	movlb	2	; select bank2
  2892     0278  0190               	clrf	16	;volatile
  2893                           
  2894                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 61:     LATA = 0x0
      +                          0;
  2895     0279  018C               	clrf	12	;volatile
  2896                           
  2897                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 62:     LATB = 0x0
      +                          0;
  2898     027A  018D               	clrf	13	;volatile
  2899     027B                     l2058:
  2900                           
  2901                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 63:     LATC = 0x1
      +                          0;
  2902     027B  3010               	movlw	16
  2903     027C  008E               	movwf	14	;volatile
  2904     027D                     l2060:
  2905                           
  2906                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 68:     TRISE = 0x
      +                          08;
  2907     027D  3008               	movlw	8
  2908     027E  0021               	movlb	1	; select bank1
  2909     027F  0090               	movwf	16	;volatile
  2910     0280                     l2062:
  2911                           
  2912                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 69:     TRISA = 0x
      +                          FF;
  2913     0280  30FF               	movlw	255
  2914     0281  008C               	movwf	12	;volatile
  2915     0282                     l2064:
  2916                           
  2917                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 70:     TRISB = 0x
      +                          C1;
  2918     0282  30C1               	movlw	193
  2919     0283  008D               	movwf	13	;volatile
  2920     0284                     l2066:
  2921                           
  2922                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 71:     TRISC = 0x
      +                          A7;
  2923     0284  30A7               	movlw	167
  2924     0285  008E               	movwf	14	;volatile
  2925     0286                     l2068:
  2926                           
  2927                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 76:     ANSELB = 0
      +                          x3E;
  2928     0286  303E               	movlw	62
  2929     0287  0023               	movlb	3	; select bank3
  2930     0288  008D               	movwf	13	;volatile
  2931     0289                     l2070:
  2932                           
  2933                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 77:     ANSELA = 0
      +                          x3F;
  2934     0289  303F               	movlw	63
  2935     028A  008C               	movwf	12	;volatile
  2936     028B                     l2072:
  2937                           
  2938                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 82:     WPUE = 0x0
      +                          0;
  2939     028B  0024               	movlb	4	; select bank4
  2940     028C  0190               	clrf	16	;volatile
  2941     028D                     l2074:
  2942                           
  2943                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 83:     WPUB = 0x0
      +                          0;
  2944     028D  018D               	clrf	13	;volatile
  2945     028E                     l2076:
  2946                           
  2947                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 84:     OPTION_REG
      +                          bits.nWPUEN = 1;
  2948     028E  0021               	movlb	1	; select bank1
  2949     028F  1795               	bsf	21,7	;volatile
  2950     0290                     l2078:
  2951                           
  2952                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\pin_manager.c: 90:     APFCON = 0
      +                          x00;
  2953     0290  0022               	movlb	2	; select bank2
  2954     0291  019D               	clrf	29	;volatile
  2955     0292                     l526:
  2956     0292  0008               	return
  2957     0293                     __end_of_PIN_MANAGER_Initialize:
  2958                           
  2959                           	psect	text9
  2960     0323                     __ptext9:	
  2961 ;; *************** function _OSCILLATOR_Initialize *****************
  2962 ;; Defined at:
  2963 ;;		line 62 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2977 ;;      Params:         0       0       0       0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0
  2980 ;;      Totals:         0       0       0       0       0       0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 4
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_SYSTEM_Initialize
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991     0323                     _OSCILLATOR_Initialize:	
  2992                           ;psect for function _OSCILLATOR_Initialize
  2993                           
  2994     0323                     l2080:	
  2995                           ;incstack = 0
  2996                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2997                           
  2998                           
  2999                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 65:     OSCCON = 0x70;
  3000     0323  3070               	movlw	112
  3001     0324  0021               	movlb	1	; select bank1
  3002     0325  0099               	movwf	25	;volatile
  3003     0326                     l2082:
  3004                           
  3005                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 67:     OSCTUNE = 0x00;
  3006     0326  0198               	clrf	24	;volatile
  3007     0327                     l2084:
  3008                           
  3009                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 69:     BORCON = 0x00;
  3010     0327  0022               	movlb	2	; select bank2
  3011     0328  0196               	clrf	22	;volatile
  3012     0329                     l489:	
  3013                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 72:     {;D:\yiming\work\T
      +                          OYOTA_RX_serial.X\mcc_generated_files\mcc.c: 73:     }
  3014                           
  3015                           
  3016                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\mcc.c: 71:     while(PLLR == 0)
  3017     0329  0021               	movlb	1	; select bank1
  3018     032A  1F1A               	btfss	26,6	;volatile
  3019     032B  2B2D               	goto	u1111
  3020     032C  2B2E               	goto	u1110
  3021     032D                     u1111:
  3022     032D  2B29               	goto	l489
  3023     032E                     u1110:
  3024     032E                     l492:
  3025     032E  0008               	return
  3026     032F                     __end_of_OSCILLATOR_Initialize:
  3027                           
  3028                           	psect	text10
  3029     0230                     __ptext10:	
  3030 ;; *************** function _EUSART_Initialize *****************
  3031 ;; Defined at:
  3032 ;;		line 66 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0, pclath, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3046 ;;      Params:         0       0       0       0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0
  3049 ;;      Totals:         0       0       0       0       0       0       0       0
  3050 ;;Total ram usage:        0 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; Hardware stack levels required when called: 5
  3053 ;; This function calls:
  3054 ;;		_EUSART_SetErrorHandler
  3055 ;;		_EUSART_SetFramingErrorHandler
  3056 ;;		_EUSART_SetOverrunErrorHandler
  3057 ;; This function is called by:
  3058 ;;		_SYSTEM_Initialize
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062     0230                     _EUSART_Initialize:	
  3063                           ;psect for function _EUSART_Initialize
  3064                           
  3065     0230                     l2046:	
  3066                           ;incstack = 0
  3067                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3068                           
  3069                           
  3070                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 71:     BAUDCON = 0x08;
  3071     0230  3008               	movlw	8
  3072     0231  0023               	movlb	3	; select bank3
  3073     0232  009F               	movwf	31	;volatile
  3074                           
  3075                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 74:     RCSTA = 0x80;
  3076     0233  3080               	movlw	128
  3077     0234  009D               	movwf	29	;volatile
  3078                           
  3079                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 77:     TXSTA = 0x24;
  3080     0235  3024               	movlw	36
  3081     0236  009E               	movwf	30	;volatile
  3082                           
  3083                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 80:     SPBRGL = 0xA0;
  3084     0237  30A0               	movlw	160
  3085     0238  009B               	movwf	27	;volatile
  3086                           
  3087                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 83:     SPBRGH = 0x01;
  3088     0239  3001               	movlw	1
  3089     023A  009C               	movwf	28	;volatile
  3090     023B                     l2048:
  3091                           
  3092                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 86:     EUSART_SetFrami
      +                          ngErrorHandler(EUSART_DefaultFramingErrorHandler);
  3093     023B  3000               	movlw	0
  3094     023C  0020               	movlb	0	; select bank0
  3095     023D  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3096     023E  3000               	movlw	0
  3097     023F  00CE               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3098     0240  3183  2347  3182   	fcall	_EUSART_SetFramingErrorHandler
  3099     0243                     l2050:
  3100                           
  3101                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 87:     EUSART_SetOverr
      +                          unErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3102     0243  3000               	movlw	0
  3103     0244  0020               	movlb	0	; select bank0
  3104     0245  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3105     0246  3000               	movlw	0
  3106     0247  00CE               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3107     0248  3183  2341  3182   	fcall	_EUSART_SetOverrunErrorHandler
  3108     024B                     l2052:
  3109                           
  3110                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 88:     EUSART_SetError
      +                          Handler(EUSART_DefaultErrorHandler);
  3111     024B  3000               	movlw	0
  3112     024C  0020               	movlb	0	; select bank0
  3113     024D  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler
  3114     024E  3000               	movlw	0
  3115     024F  00CE               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3116     0250  3183  234D  3182   	fcall	_EUSART_SetErrorHandler
  3117     0253                     l2054:
  3118                           
  3119                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 90:     eusartRxLastErr
      +                          or.status = 0;
  3120     0253  0020               	movlb	0	; select bank0
  3121     0254  01C1               	clrf	_eusartRxLastError	;volatile
  3122     0255                     l387:
  3123     0255  0008               	return
  3124     0256                     __end_of_EUSART_Initialize:
  3125                           
  3126                           	psect	text11
  3127     0341                     __ptext11:	
  3128 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3129 ;; Defined at:
  3130 ;;		line 170 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3133 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3145 ;;      Params:         0       2       0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0
  3148 ;;      Totals:         0       2       0       0       0       0       0       0
  3149 ;;Total ram usage:        2 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 4
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_EUSART_Initialize
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159     0341                     _EUSART_SetOverrunErrorHandler:	
  3160                           ;psect for function _EUSART_SetOverrunErrorHandler
  3161                           
  3162     0341                     l2030:	
  3163                           ;incstack = 0
  3164                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3165                           
  3166                           
  3167                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 171:     EUSART_Overrun
      +                          ErrorHandler = interruptHandler;
  3168     0341  0020               	movlb	0	; select bank0
  3169     0342  084E               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3170     0343  00B4               	movwf	_EUSART_OverrunErrorHandler+1
  3171     0344  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3172     0345  00B3               	movwf	_EUSART_OverrunErrorHandler
  3173     0346                     l435:
  3174     0346  0008               	return
  3175     0347                     __end_of_EUSART_SetOverrunErrorHandler:
  3176                           
  3177                           	psect	text12
  3178     0347                     __ptext12:	
  3179 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3180 ;; Defined at:
  3181 ;;		line 166 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3184 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3196 ;;      Params:         0       2       0       0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0
  3199 ;;      Totals:         0       2       0       0       0       0       0       0
  3200 ;;Total ram usage:        2 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 4
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_EUSART_Initialize
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210     0347                     _EUSART_SetFramingErrorHandler:	
  3211                           ;psect for function _EUSART_SetFramingErrorHandler
  3212                           
  3213     0347                     l2028:	
  3214                           ;incstack = 0
  3215                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3216                           
  3217                           
  3218                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 167:     EUSART_Framing
      +                          ErrorHandler = interruptHandler;
  3219     0347  0020               	movlb	0	; select bank0
  3220     0348  084E               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3221     0349  00B6               	movwf	_EUSART_FramingErrorHandler+1
  3222     034A  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3223     034B  00B5               	movwf	_EUSART_FramingErrorHandler
  3224     034C                     l432:
  3225     034C  0008               	return
  3226     034D                     __end_of_EUSART_SetFramingErrorHandler:
  3227                           
  3228                           	psect	text13
  3229     034D                     __ptext13:	
  3230 ;; *************** function _EUSART_SetErrorHandler *****************
  3231 ;; Defined at:
  3232 ;;		line 174 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3235 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3247 ;;      Params:         0       2       0       0       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0       0
  3250 ;;      Totals:         0       2       0       0       0       0       0       0
  3251 ;;Total ram usage:        2 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 4
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_EUSART_Initialize
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261     034D                     _EUSART_SetErrorHandler:	
  3262                           ;psect for function _EUSART_SetErrorHandler
  3263                           
  3264     034D                     l2032:	
  3265                           ;incstack = 0
  3266                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3267                           
  3268                           
  3269                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\eusart.c: 175:     EUSART_ErrorHa
      +                          ndler = interruptHandler;
  3270     034D  0020               	movlb	0	; select bank0
  3271     034E  084E               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3272     034F  00B2               	movwf	_EUSART_ErrorHandler+1
  3273     0350  084D               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3274     0351  00B1               	movwf	_EUSART_ErrorHandler
  3275     0352                     l438:
  3276     0352  0008               	return
  3277     0353                     __end_of_EUSART_SetErrorHandler:
  3278                           
  3279                           	psect	text14
  3280     02D5                     __ptext14:	
  3281 ;; *************** function _CCP4_Initialize *****************
  3282 ;; Defined at:
  3283 ;;		line 68 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3297 ;;      Params:         0       0       0       0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 5
  3304 ;; This function calls:
  3305 ;;		_CCP4_SetCallBack
  3306 ;; This function is called by:
  3307 ;;		_SYSTEM_Initialize
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311     02D5                     _CCP4_Initialize:	
  3312                           ;psect for function _CCP4_Initialize
  3313                           
  3314     02D5                     l2034:	
  3315                           ;incstack = 0
  3316                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3317                           
  3318                           
  3319                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 72:   CCP4CON = 0x04;
  3320     02D5  3004               	movlw	4
  3321     02D6  0026               	movlb	6	; select bank6
  3322     02D7  009A               	movwf	26	;volatile
  3323     02D8                     l2036:
  3324                           
  3325                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 75:   CCPR4L = 0x00;
  3326     02D8  0198               	clrf	24	;volatile
  3327     02D9                     l2038:
  3328                           
  3329                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 78:   CCPR4H = 0x00;
  3330     02D9  0199               	clrf	25	;volatile
  3331     02DA                     l2040:
  3332                           
  3333                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 81:   CCP4_SetCallBack(CC
      +                          P4_DefaultCallBack);
  3334     02DA  305E               	movlw	low _CCP4_DefaultCallBack
  3335     02DB  0020               	movlb	0	; select bank0
  3336     02DC  00CD               	movwf	CCP4_SetCallBack@customCallBack
  3337     02DD  3003               	movlw	high _CCP4_DefaultCallBack
  3338     02DE  00CE               	movwf	CCP4_SetCallBack@customCallBack+1
  3339     02DF  3183  2353  3182   	fcall	_CCP4_SetCallBack
  3340     02E2                     l2042:
  3341                           
  3342                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 84:   PIR3bits.CCP4IF = 0
      +                          ;
  3343     02E2  0020               	movlb	0	; select bank0
  3344     02E3  1293               	bcf	19,5	;volatile
  3345     02E4                     l2044:
  3346                           
  3347                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 87:   PIE3bits.CCP4IE = 1
      +                          ;
  3348     02E4  0021               	movlb	1	; select bank1
  3349     02E5  1693               	bsf	19,5	;volatile
  3350     02E6                     l338:
  3351     02E6  0008               	return
  3352     02E7                     __end_of_CCP4_Initialize:
  3353                           
  3354                           	psect	text15
  3355     0353                     __ptext15:	
  3356 ;; *************** function _CCP4_SetCallBack *****************
  3357 ;; Defined at:
  3358 ;;		line 104 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  3361 ;;		 -> CCP4_DefaultCallBack(1), CCP4_EvenHandler(1), 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3373 ;;      Params:         0       2       0       0       0       0       0       0
  3374 ;;      Locals:         0       0       0       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0
  3376 ;;      Totals:         0       2       0       0       0       0       0       0
  3377 ;;Total ram usage:        2 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 4
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;;		_CCP4_Initialize
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     0353                     _CCP4_SetCallBack:	
  3389                           ;psect for function _CCP4_SetCallBack
  3390                           
  3391     0353                     l2024:	
  3392                           ;incstack = 0
  3393                           ; Regs used in _CCP4_SetCallBack: [wreg]
  3394                           
  3395                           
  3396                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 105:   CCP4_CallBack = cu
      +                          stomCallBack;
  3397     0353  0020               	movlb	0	; select bank0
  3398     0354  084E               	movf	CCP4_SetCallBack@customCallBack+1,w
  3399     0355  00B8               	movwf	_CCP4_CallBack+1
  3400     0356  084D               	movf	CCP4_SetCallBack@customCallBack,w
  3401     0357  00B7               	movwf	_CCP4_CallBack
  3402     0358                     l344:
  3403     0358  0008               	return
  3404     0359                     __end_of_CCP4_SetCallBack:
  3405                           
  3406                           	psect	text16
  3407     01C5                     __ptext16:	
  3408 ;; *************** function _LED_output *****************
  3409 ;; Defined at:
  3410 ;;		line 340 in file "D:\yiming\work\TOYOTA_RX_serial.X\main.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  crc8            1    0[BANK0 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3424 ;;      Params:         0       0       0       0       0       0       0       0
  3425 ;;      Locals:         0       1       0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0
  3427 ;;      Totals:         0       1       0       0       0       0       0       0
  3428 ;;Total ram usage:        1 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 4
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     01C5                     _LED_output:	
  3439                           ;psect for function _LED_output
  3440                           
  3441     01C5                     l2108:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _LED_output: [wreg+fsr1l+fsr1h+status,2+status,0]
  3444                           
  3445                           
  3446                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 341:   uint8_t crc8 = CS[csFlag.Byte];
  3447     01C5  0873               	movf	_csFlag,w
  3448     01C6  3EA0               	addlw	(low (_CS| 0))& (0+255)
  3449     01C7  0086               	movwf	6
  3450     01C8  0187               	clrf	7
  3451     01C9  0801               	movf	1,w
  3452     01CA  0020               	movlb	0	; select bank0
  3453     01CB  00CD               	movwf	LED_output@crc8
  3454     01CC                     l2110:
  3455                           
  3456                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 342:   if (data_buf[10] == crc8) {
  3457     01CC  082A               	movf	_data_buf+10,w
  3458     01CD  064D               	xorwf	LED_output@crc8,w
  3459     01CE  1D03               	skipz
  3460     01CF  29D1               	goto	u1121
  3461     01D0  29D2               	goto	u1120
  3462     01D1                     u1121:
  3463     01D1  29FE               	goto	l220
  3464     01D2                     u1120:
  3465     01D2                     l2112:
  3466                           
  3467                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 344:     if (csFlag.RunLight == 1) {
  3468     01D2  1EF3               	btfss	_csFlag,5
  3469     01D3  29D5               	goto	u1131
  3470     01D4  29D6               	goto	u1130
  3471     01D5                     u1131:
  3472     01D5  29D9               	goto	l188
  3473     01D6                     u1130:
  3474     01D6                     l185:	
  3475                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 345:       do { LATBbits.LATB5 = 1; } while(0
      +                          );
  3476                           
  3477     01D6  0022               	movlb	2	; select bank2
  3478     01D7  168D               	bsf	13,5	;volatile
  3479     01D8  29DB               	goto	l187
  3480     01D9                     l188:	
  3481                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 347:       do { LATBbits.LATB5 = 0; } while(0
      +                          );
  3482                           
  3483     01D9  0022               	movlb	2	; select bank2
  3484     01DA  128D               	bcf	13,5	;volatile
  3485     01DB                     l187:	
  3486                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 348:     }
  3487                           
  3488                           
  3489                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 351:     if (csFlag.DRL == 1) {
  3490     01DB  1E73               	btfss	_csFlag,4
  3491     01DC  29DE               	goto	u1141
  3492     01DD  29DF               	goto	u1140
  3493     01DE                     u1141:
  3494     01DE  29E1               	goto	l194
  3495     01DF                     u1140:
  3496     01DF                     l191:	
  3497                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 352:       do { LATBbits.LATB4 = 1; } while(0
      +                          );
  3498                           
  3499     01DF  160D               	bsf	13,4	;volatile
  3500     01E0  29E2               	goto	l193
  3501     01E1                     l194:	
  3502                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 354:       do { LATBbits.LATB4 = 0; } while(0
      +                          );
  3503                           
  3504     01E1  120D               	bcf	13,4	;volatile
  3505     01E2                     l193:	
  3506                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 355:     }
  3507                           
  3508                           
  3509                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 358:     if (csFlag.LoBeam == 1) {
  3510     01E2  1DF3               	btfss	_csFlag,3
  3511     01E3  29E5               	goto	u1151
  3512     01E4  29E6               	goto	u1150
  3513     01E5                     u1151:
  3514     01E5  29E8               	goto	l200
  3515     01E6                     u1150:
  3516     01E6                     l197:	
  3517                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 359:       do { LATBbits.LATB3 = 1; } while(0
      +                          );
  3518                           
  3519     01E6  158D               	bsf	13,3	;volatile
  3520     01E7  29E9               	goto	l199
  3521     01E8                     l200:	
  3522                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 361:       do { LATBbits.LATB3 = 0; } while(0
      +                          );
  3523                           
  3524     01E8  118D               	bcf	13,3	;volatile
  3525     01E9                     l199:	
  3526                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 362:     }
  3527                           
  3528                           
  3529                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 365:     if (csFlag.HiBeam == 1) {
  3530     01E9  1D73               	btfss	_csFlag,2
  3531     01EA  29EC               	goto	u1161
  3532     01EB  29ED               	goto	u1160
  3533     01EC                     u1161:
  3534     01EC  29EF               	goto	l206
  3535     01ED                     u1160:
  3536     01ED                     l203:	
  3537                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 366:       do { LATBbits.LATB2 = 1; } while(0
      +                          );
  3538                           
  3539     01ED  150D               	bsf	13,2	;volatile
  3540     01EE  29F0               	goto	l205
  3541     01EF                     l206:	
  3542                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 368:       do { LATBbits.LATB2 = 0; } while(0
      +                          );
  3543                           
  3544     01EF  110D               	bcf	13,2	;volatile
  3545     01F0                     l205:	
  3546                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 369:     }
  3547                           
  3548                           
  3549                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 372:     if (csFlag.turnLight_L == 1) {
  3550     01F0  1CF3               	btfss	_csFlag,1
  3551     01F1  29F3               	goto	u1171
  3552     01F2  29F4               	goto	u1170
  3553     01F3                     u1171:
  3554     01F3  29F6               	goto	l212
  3555     01F4                     u1170:
  3556     01F4                     l209:	
  3557                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 373:       do { LATBbits.LATB1 = 1; } while(0
      +                          );
  3558                           
  3559     01F4  148D               	bsf	13,1	;volatile
  3560     01F5  29F7               	goto	l211
  3561     01F6                     l212:	
  3562                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 375:       do { LATBbits.LATB1 = 0; } while(0
      +                          );
  3563                           
  3564     01F6  108D               	bcf	13,1	;volatile
  3565     01F7                     l211:	
  3566                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 376:     }
  3567                           
  3568                           
  3569                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 379:     if (csFlag.turnLight_R == 1) {
  3570     01F7  1C73               	btfss	_csFlag,0
  3571     01F8  29FA               	goto	u1181
  3572     01F9  29FB               	goto	u1180
  3573     01FA                     u1181:
  3574     01FA  29FD               	goto	l218
  3575     01FB                     u1180:
  3576     01FB                     l215:	
  3577                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 380:       do { LATCbits.LATC3 = 1; } while(0
      +                          );
  3578                           
  3579     01FB  158E               	bsf	14,3	;volatile
  3580     01FC  29FE               	goto	l220
  3581     01FD                     l218:	
  3582                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 382:       do { LATCbits.LATC3 = 0; } while(0
      +                          );
  3583                           
  3584     01FD  118E               	bcf	14,3	;volatile
  3585     01FE                     l220:
  3586     01FE  0008               	return
  3587     01FF                     __end_of_LED_output:
  3588                           
  3589                           	psect	intentry
  3590     0004                     __pintentry:	
  3591 ;; *************** function _INTERRUPT_InterruptManager *****************
  3592 ;; Defined at:
  3593 ;;		line 52 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0, pclath, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3607 ;;      Params:         0       0       0       0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 3
  3614 ;; This function calls:
  3615 ;;		_CCP4_CaptureISR
  3616 ;;		_TMR0_ISR
  3617 ;; This function is called by:
  3618 ;;		Interrupt level 1
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622     0004                     _INTERRUPT_InterruptManager:
  3623                           
  3624                           ;incstack = 0
  3625     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3626                           
  3627                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3628     0005  3180               	pagesel	$
  3629     0006                     i1l2010:
  3630                           
  3631                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 55:     if(I
      +                          NTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3632     0006  1E8B               	btfss	11,5	;volatile
  3633     0007  2809               	goto	u106_21
  3634     0008  280A               	goto	u106_20
  3635     0009                     u106_21:
  3636     0009  2812               	goto	i1l453
  3637     000A                     u106_20:
  3638     000A                     i1l2012:
  3639     000A  1D0B               	btfss	11,2	;volatile
  3640     000B  280D               	goto	u107_21
  3641     000C  280E               	goto	u107_20
  3642     000D                     u107_21:
  3643     000D  2812               	goto	i1l453
  3644     000E                     u107_20:
  3645     000E                     i1l2014:
  3646                           
  3647                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 56:     {;D:
      +                          \yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 57:         TMR
      +                          0_ISR();
  3648     000E  3182  2293  3180   	fcall	_TMR0_ISR
  3649                           
  3650                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 58:     }
  3651     0011  2824               	goto	i1l459
  3652     0012                     i1l453:	
  3653                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 59:     else
      +                           if(INTCONbits.PEIE == 1)
  3654                           
  3655     0012  1F0B               	btfss	11,6	;volatile
  3656     0013  2815               	goto	u108_21
  3657     0014  2816               	goto	u108_20
  3658     0015                     u108_21:
  3659     0015  2824               	goto	i1l459
  3660     0016                     u108_20:
  3661     0016                     i1l2016:
  3662                           
  3663                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 60:     {;D:
      +                          \yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 61:         if(
      +                          PIE3bits.CCP4IE == 1 && PIR3bits.CCP4IF == 1)
  3664     0016  0021               	movlb	1	; select bank1
  3665     0017  1E93               	btfss	19,5	;volatile
  3666     0018  281A               	goto	u109_21
  3667     0019  281B               	goto	u109_20
  3668     001A                     u109_21:
  3669     001A  2824               	goto	i1l458
  3670     001B                     u109_20:
  3671     001B                     i1l2018:
  3672     001B  0020               	movlb	0	; select bank0
  3673     001C  1E93               	btfss	19,5	;volatile
  3674     001D  281F               	goto	u110_21
  3675     001E  2820               	goto	u110_20
  3676     001F                     u110_21:
  3677     001F  2824               	goto	i1l458
  3678     0020                     u110_20:
  3679     0020                     i1l2020:
  3680                           
  3681                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 62:         
      +                          {;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 63:        
      +                               CCP4_CaptureISR();
  3682     0020  3182  22E7  3180   	fcall	_CCP4_CaptureISR
  3683                           
  3684                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 64:         
      +                          }
  3685     0023  2824               	goto	i1l459
  3686     0024                     i1l458:	
  3687                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 71:     {;D:
      +                          \yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\interrupt_manager.c: 73:     }
  3688                           
  3689     0024                     i1l459:
  3690     0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3691     0025  0009               	retfie
  3692     0026                     __end_of_INTERRUPT_InterruptManager:
  3693                           
  3694                           	psect	text18
  3695     0293                     __ptext18:	
  3696 ;; *************** function _TMR0_ISR *****************
  3697 ;; Defined at:
  3698 ;;		line 108 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0, pclath, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3712 ;;      Params:         0       0       0       0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 2
  3719 ;; This function calls:
  3720 ;;		_TMR0_CallBack
  3721 ;; This function is called by:
  3722 ;;		_INTERRUPT_InterruptManager
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726     0293                     _TMR0_ISR:	
  3727                           ;psect for function _TMR0_ISR
  3728                           
  3729     0293                     i1l1868:	
  3730                           ;incstack = 0
  3731                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3732                           
  3733                           
  3734                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 110:     static volatile 
      +                          uint16_t CountCallBack = 0;;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c
      +                          : 113:     INTCONbits.TMR0IF = 0;
  3735     0293  110B               	bcf	11,2	;volatile
  3736     0294                     i1l1870:
  3737                           
  3738                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 115:     TMR0 = timer0Rel
      +                          oadVal;
  3739     0294  0870               	movf	_timer0ReloadVal,w	;volatile
  3740     0295  0020               	movlb	0	; select bank0
  3741     0296  0095               	movwf	21	;volatile
  3742                           
  3743                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 118:     if (++CountCallB
      +                          ack >= 50)
  3744     0297  3001               	movlw	1
  3745     0298  07AD               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  3746     0299  3000               	movlw	0
  3747     029A  3DAE               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  3748     029B  3000               	movlw	0
  3749     029C  022E               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  3750     029D  3032               	movlw	50
  3751     029E  1903               	skipnz
  3752     029F  022D               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  3753     02A0  1C03               	skipc
  3754     02A1  2AA3               	goto	u91_21
  3755     02A2  2AA4               	goto	u91_20
  3756     02A3                     u91_21:
  3757     02A3  2AAA               	goto	i1l563
  3758     02A4                     u91_20:
  3759     02A4                     i1l1872:
  3760                           
  3761                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 119:     {;D:\yiming\work
      +                          \TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 121:         TMR0_CallBack();
  3762     02A4  3183  2316  3182   	fcall	_TMR0_CallBack
  3763     02A7                     i1l1874:
  3764                           
  3765                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 124:         CountCallBac
      +                          k = 0;
  3766     02A7  0020               	movlb	0	; select bank0
  3767     02A8  01AD               	clrf	TMR0_ISR@CountCallBack	;volatile
  3768     02A9  01AE               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  3769     02AA                     i1l563:
  3770     02AA  0008               	return
  3771     02AB                     __end_of_TMR0_ISR:
  3772                           
  3773                           	psect	text19
  3774     0316                     __ptext19:	
  3775 ;; *************** function _TMR0_CallBack *****************
  3776 ;; Defined at:
  3777 ;;		line 130 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3791 ;;      Params:         0       0       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0
  3794 ;;      Totals:         0       0       0       0       0       0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 1
  3798 ;; This function calls:
  3799 ;;		NULL
  3800 ;;		_TMR0_DefaultInterruptHandler
  3801 ;;		_TMR0_EvenHandler
  3802 ;; This function is called by:
  3803 ;;		_TMR0_ISR
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807     0316                     _TMR0_CallBack:	
  3808                           ;psect for function _TMR0_CallBack
  3809                           
  3810     0316                     i1l1774:	
  3811                           ;incstack = 0
  3812                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3813                           
  3814                           
  3815                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 134:     if(TMR0_Interrup
      +                          tHandler)
  3816     0316  0020               	movlb	0	; select bank0
  3817     0317  082F               	movf	_TMR0_InterruptHandler,w
  3818     0318  0430               	iorwf	_TMR0_InterruptHandler+1,w
  3819     0319  1903               	btfsc	3,2
  3820     031A  2B1C               	goto	u72_21
  3821     031B  2B1D               	goto	u72_20
  3822     031C                     u72_21:
  3823     031C  2B22               	goto	i1l567
  3824     031D                     u72_20:
  3825     031D                     i1l1776:
  3826                           
  3827                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 135:     {;D:\yiming\work
      +                          \TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c: 136:         TMR0_InterruptHandler();
  3828     031D  0830               	movf	_TMR0_InterruptHandler+1,w
  3829     031E  008A               	movwf	10
  3830     031F  082F               	movf	_TMR0_InterruptHandler,w
  3831     0320  000A               	callw
  3832     0321  3183               	pagesel	$
  3833     0322                     i1l567:
  3834     0322  0008               	return
  3835     0323                     __end_of_TMR0_CallBack:
  3836                           
  3837                           	psect	text20
  3838     035D                     __ptext20:	
  3839 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3840 ;; Defined at:
  3841 ;;		line 144 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\tmr0.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		None
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3855 ;;      Params:         0       0       0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_TMR0_Initialize
  3865 ;;		_TMR0_CallBack
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869     035D                     _TMR0_DefaultInterruptHandler:	
  3870                           ;psect for function _TMR0_DefaultInterruptHandler
  3871                           
  3872     035D                     i1l573:	
  3873                           ;incstack = 0
  3874                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  3875                           
  3876     035D  0008               	return
  3877     035E                     __end_of_TMR0_DefaultInterruptHandler:
  3878                           
  3879                           	psect	text21
  3880     02F9                     __ptext21:	
  3881 ;; *************** function _TMR0_EvenHandler *****************
  3882 ;; Defined at:
  3883 ;;		line 569 in file "D:\yiming\work\TOYOTA_RX_serial.X\main.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3897 ;;      Params:         0       0       0       0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0       0
  3899 ;;      Temps:          1       0       0       0       0       0       0       0
  3900 ;;      Totals:         1       0       0       0       0       0       0       0
  3901 ;;Total ram usage:        1 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;;		_TMR0_CallBack
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911     02F9                     _TMR0_EvenHandler:	
  3912                           ;psect for function _TMR0_EvenHandler
  3913                           
  3914     02F9                     i1l1666:	
  3915                           ;incstack = 0
  3916                           ; Regs used in _TMR0_EvenHandler: [wreg+status,2+status,0]
  3917                           
  3918                           
  3919                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 571:   if ((fSerialStart_Right == 1) || (fSer
      +                          ialStart_Left == 1)) {
  3920     02F9  0020               	movlb	0	; select bank0
  3921     02FA  0347               	decf	_fSerialStart_Right,w
  3922     02FB  1903               	btfsc	3,2
  3923     02FC  2AFE               	goto	u58_21
  3924     02FD  2AFF               	goto	u58_20
  3925     02FE                     u58_21:
  3926     02FE  2B04               	goto	i1l1670
  3927     02FF                     u58_20:
  3928     02FF                     i1l1668:
  3929     02FF  0348               	decf	_fSerialStart_Left,w
  3930     0300  1D03               	btfss	3,2
  3931     0301  2B03               	goto	u59_21
  3932     0302  2B04               	goto	u59_20
  3933     0303                     u59_21:
  3934     0303  2B08               	goto	i1l310
  3935     0304                     u59_20:
  3936     0304                     i1l1670:
  3937                           
  3938                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 572:     LED_STEP++;
  3939     0304  3001               	movlw	1
  3940     0305  00F6               	movwf	??_TMR0_EvenHandler
  3941     0306  0876               	movf	??_TMR0_EvenHandler,w
  3942     0307  07F2               	addwf	_LED_STEP,f	;volatile
  3943     0308                     i1l310:
  3944     0308  0008               	return
  3945     0309                     __end_of_TMR0_EvenHandler:
  3946                           
  3947                           	psect	text22
  3948     02E7                     __ptext22:	
  3949 ;; *************** function _CCP4_CaptureISR *****************
  3950 ;; Defined at:
  3951 ;;		line 90 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  module          2    4[COMMON] struct CCPR4Reg_tag
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, pclath, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3965 ;;      Params:         0       0       0       0       0       0       0       0
  3966 ;;      Locals:         2       0       0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0
  3968 ;;      Totals:         2       0       0       0       0       0       0       0
  3969 ;;Total ram usage:        2 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 1
  3972 ;; This function calls:
  3973 ;;		NULL
  3974 ;;		_CCP4_DefaultCallBack
  3975 ;;		_CCP4_EvenHandler
  3976 ;; This function is called by:
  3977 ;;		_INTERRUPT_InterruptManager
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981     02E7                     _CCP4_CaptureISR:	
  3982                           ;psect for function _CCP4_CaptureISR
  3983                           
  3984     02E7                     i1l1850:	
  3985                           ;incstack = 0
  3986                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  3987                           
  3988                           
  3989                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 91:   CCP4_PERIOD_REG_T m
      +                          odule;;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 94:   PIR3bits.CCP4
      +                          IF = 0;
  3990     02E7  0020               	movlb	0	; select bank0
  3991     02E8  1293               	bcf	19,5	;volatile
  3992     02E9                     i1l1852:
  3993                           
  3994                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 97:   module.ccpr4l = CCP
      +                          R4L;
  3995     02E9  0026               	movlb	6	; select bank6
  3996     02EA  0818               	movf	24,w	;volatile
  3997     02EB  00FA               	movwf	CCP4_CaptureISR@module
  3998                           
  3999                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 98:   module.ccpr4h = CCP
      +                          R4H;
  4000     02EC  0819               	movf	25,w	;volatile
  4001     02ED  00FB               	movwf	CCP4_CaptureISR@module+1
  4002     02EE                     i1l1854:
  4003                           
  4004                           ;D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c: 101:   CCP4_CallBack(modu
      +                          le.ccpr4_16Bit);
  4005     02EE  087B               	movf	CCP4_CaptureISR@module+1,w
  4006     02EF  00F7               	movwf	CCP4_DefaultCallBack@capturedValue+1
  4007     02F0  087A               	movf	CCP4_CaptureISR@module,w
  4008     02F1  00F6               	movwf	CCP4_DefaultCallBack@capturedValue
  4009     02F2  0020               	movlb	0	; select bank0
  4010     02F3  0838               	movf	_CCP4_CallBack+1,w
  4011     02F4  008A               	movwf	10
  4012     02F5  0837               	movf	_CCP4_CallBack,w
  4013     02F6  000A               	callw
  4014     02F7  3182               	pagesel	$
  4015     02F8                     i1l341:
  4016     02F8  0008               	return
  4017     02F9                     __end_of_CCP4_CaptureISR:
  4018                           
  4019                           	psect	text23
  4020     035E                     __ptext23:	
  4021 ;; *************** function _CCP4_DefaultCallBack *****************
  4022 ;; Defined at:
  4023 ;;		line 64 in file "D:\yiming\work\TOYOTA_RX_serial.X\mcc_generated_files\ccp4.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  capturedValu    2    0[COMMON] unsigned short 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		None
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4037 ;;      Params:         2       0       0       0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0
  4040 ;;      Totals:         2       0       0       0       0       0       0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_CCP4_Initialize
  4047 ;;		_CCP4_CaptureISR
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051     035E                     _CCP4_DefaultCallBack:	
  4052                           ;psect for function _CCP4_DefaultCallBack
  4053                           
  4054     035E                     i1l335:	
  4055                           ;incstack = 0
  4056                           ; Regs used in _CCP4_DefaultCallBack: []
  4057                           
  4058     035E  0008               	return
  4059     035F                     __end_of_CCP4_DefaultCallBack:
  4060                           
  4061                           	psect	text24
  4062     0046                     __ptext24:	
  4063 ;; *************** function _CCP4_EvenHandler *****************
  4064 ;; Defined at:
  4065 ;;		line 495 in file "D:\yiming\work\TOYOTA_RX_serial.X\main.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  capturedValu    2    0[COMMON] unsigned short 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4079 ;;      Params:         2       0       0       0       0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0       0       0       0
  4081 ;;      Temps:          2       0       0       0       0       0       0       0
  4082 ;;      Totals:         4       0       0       0       0       0       0       0
  4083 ;;Total ram usage:        4 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_main
  4089 ;;		_CCP4_CaptureISR
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093     0046                     _CCP4_EvenHandler:	
  4094                           ;psect for function _CCP4_EvenHandler
  4095                           
  4096     0046                     i1l1682:	
  4097                           ;incstack = 0
  4098                           ; Regs used in _CCP4_EvenHandler: [wreg+status,2+status,0]
  4099                           
  4100                           
  4101                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 496:   static uint16_t pluse_width_LO = 0;;D:
      +                          \yiming\work\TOYOTA_RX_serial.X\main.c: 497:   static uint16_t pluse_width_HI = 0;;D:\yi
      +                          ming\work\TOYOTA_RX_serial.X\main.c: 498:   static uint8_t HI_us = 0;;D:\yiming\work\TOY
      +                          OTA_RX_serial.X\main.c: 499:   static uint8_t LO_us = 0;;D:\yiming\work\TOYOTA_RX_serial
      +                          .X\main.c: 500:   static uint8_t diff_us = 0;;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 
      +                          501:   static uint16_t falling_edge_time = 0;;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 
      +                          502:   static uint16_t rising_edge_time = 0;
  4102     0046  3004               	movlw	4
  4103     0047  0026               	movlb	6	; select bank6
  4104     0048  061A               	xorwf	26,w	;volatile
  4105     0049  1D03               	btfss	3,2
  4106     004A  284C               	goto	u60_21
  4107     004B  284D               	goto	u60_20
  4108     004C                     u60_21:
  4109     004C  28E5               	goto	i1l1722
  4110     004D                     u60_20:
  4111     004D                     i1l1684:
  4112                           
  4113                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 509:     falling_edge_time = capturedValue;
  4114     004D  0877               	movf	CCP4_EvenHandler@capturedValue+1,w
  4115     004E  0020               	movlb	0	; select bank0
  4116     004F  00BC               	movwf	CCP4_EvenHandler@falling_edge_time+1
  4117     0050  0876               	movf	CCP4_EvenHandler@capturedValue,w
  4118     0051  00BB               	movwf	CCP4_EvenHandler@falling_edge_time
  4119                           
  4120                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 510:     CCP4CON = 0x05;
  4121     0052  3005               	movlw	5
  4122     0053  0026               	movlb	6	; select bank6
  4123     0054  009A               	movwf	26	;volatile
  4124     0055                     i1l1686:
  4125                           
  4126                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 511:     if (rise_edge_flag == 1) {
  4127     0055  0020               	movlb	0	; select bank0
  4128     0056  0344               	decf	CCP4_EvenHandler@rise_edge_flag,w
  4129     0057  1D03               	btfss	3,2
  4130     0058  285A               	goto	u61_21
  4131     0059  285B               	goto	u61_20
  4132     005A                     u61_21:
  4133     005A  2913               	goto	i1l304
  4134     005B                     u61_20:
  4135     005B                     i1l1688:
  4136                           
  4137                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 512:       rise_edge_flag = 0;
  4138     005B  01C4               	clrf	CCP4_EvenHandler@rise_edge_flag
  4139     005C                     i1l1690:
  4140                           
  4141                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 514:       if (falling_edge_time >= rising_ed
      +                          ge_time) {
  4142     005C  083A               	movf	CCP4_EvenHandler@rising_edge_time+1,w
  4143     005D  023C               	subwf	CCP4_EvenHandler@falling_edge_time+1,w
  4144     005E  1D03               	skipz
  4145     005F  2862               	goto	u62_25
  4146     0060  0839               	movf	CCP4_EvenHandler@rising_edge_time,w
  4147     0061  023B               	subwf	CCP4_EvenHandler@falling_edge_time,w
  4148     0062                     u62_25:
  4149     0062  1C03               	skipc
  4150     0063  2865               	goto	u62_21
  4151     0064  2866               	goto	u62_20
  4152     0065                     u62_21:
  4153     0065  286D               	goto	i1l1694
  4154     0066                     u62_20:
  4155     0066                     i1l1692:
  4156                           
  4157                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 515:         pluse_width_HI = falling_edge_ti
      +                          me - rising_edge_time;
  4158     0066  0839               	movf	CCP4_EvenHandler@rising_edge_time,w
  4159     0067  023B               	subwf	CCP4_EvenHandler@falling_edge_time,w
  4160     0068  00BD               	movwf	CCP4_EvenHandler@pluse_width_HI
  4161     0069  083A               	movf	CCP4_EvenHandler@rising_edge_time+1,w
  4162     006A  3B3C               	subwfb	CCP4_EvenHandler@falling_edge_time+1,w
  4163     006B  00BE               	movwf	CCP4_EvenHandler@pluse_width_HI+1
  4164                           
  4165                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 516:       } else {
  4166     006C  2879               	goto	i1l283
  4167     006D                     i1l1694:
  4168                           
  4169                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 517:         pluse_width_HI = (0xffff - risin
      +                          g_edge_time) + falling_edge_time;
  4170     006D  083A               	movf	CCP4_EvenHandler@rising_edge_time+1,w
  4171     006E  00F9               	movwf	??_CCP4_EvenHandler+1
  4172     006F  0839               	movf	CCP4_EvenHandler@rising_edge_time,w
  4173     0070  00F8               	movwf	??_CCP4_EvenHandler
  4174     0071  09F8               	comf	??_CCP4_EvenHandler,f
  4175     0072  09F9               	comf	??_CCP4_EvenHandler+1,f
  4176     0073  083B               	movf	CCP4_EvenHandler@falling_edge_time,w
  4177     0074  0778               	addwf	??_CCP4_EvenHandler,w
  4178     0075  00BD               	movwf	CCP4_EvenHandler@pluse_width_HI
  4179     0076  083C               	movf	CCP4_EvenHandler@falling_edge_time+1,w
  4180     0077  3D79               	addwfc	??_CCP4_EvenHandler+1,w
  4181     0078  00BE               	movwf	CCP4_EvenHandler@pluse_width_HI+1
  4182     0079                     i1l283:	
  4183                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 518:       }
  4184                           
  4185                           
  4186                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 519:       LO_us = (pluse_width_LO >> 3) & 0x
      +                          ff;
  4187     0079  0840               	movf	CCP4_EvenHandler@pluse_width_LO+1,w
  4188     007A  00F9               	movwf	??_CCP4_EvenHandler+1
  4189     007B  083F               	movf	CCP4_EvenHandler@pluse_width_LO,w
  4190     007C  00F8               	movwf	??_CCP4_EvenHandler
  4191     007D  36F9               	lsrf	??_CCP4_EvenHandler+1,f
  4192     007E  0CF8               	rrf	??_CCP4_EvenHandler,f
  4193     007F  36F9               	lsrf	??_CCP4_EvenHandler+1,f
  4194     0080  0CF8               	rrf	??_CCP4_EvenHandler,f
  4195     0081  36F9               	lsrf	??_CCP4_EvenHandler+1,f
  4196     0082  0CF8               	rrf	??_CCP4_EvenHandler,f
  4197     0083  0878               	movf	??_CCP4_EvenHandler,w
  4198     0084  00C6               	movwf	CCP4_EvenHandler@LO_us
  4199                           
  4200                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 520:       HI_us = (pluse_width_HI >> 3) & 0x
      +                          ff;
  4201     0085  083E               	movf	CCP4_EvenHandler@pluse_width_HI+1,w
  4202     0086  00F9               	movwf	??_CCP4_EvenHandler+1
  4203     0087  083D               	movf	CCP4_EvenHandler@pluse_width_HI,w
  4204     0088  00F8               	movwf	??_CCP4_EvenHandler
  4205     0089  36F9               	lsrf	??_CCP4_EvenHandler+1,f
  4206     008A  0CF8               	rrf	??_CCP4_EvenHandler,f
  4207     008B  36F9               	lsrf	??_CCP4_EvenHandler+1,f
  4208     008C  0CF8               	rrf	??_CCP4_EvenHandler,f
  4209     008D  36F9               	lsrf	??_CCP4_EvenHandler+1,f
  4210     008E  0CF8               	rrf	??_CCP4_EvenHandler,f
  4211     008F  0878               	movf	??_CCP4_EvenHandler,w
  4212     0090  00F1               	movwf	CCP4_EvenHandler@HI_us
  4213     0091                     i1l1696:
  4214                           
  4215                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 521:       if (HI_us > LO_us)
  4216     0091  0871               	movf	CCP4_EvenHandler@HI_us,w
  4217     0092  0246               	subwf	CCP4_EvenHandler@LO_us,w
  4218     0093  1803               	skipnc
  4219     0094  2896               	goto	u63_21
  4220     0095  2897               	goto	u63_20
  4221     0096                     u63_21:
  4222     0096  289B               	goto	i1l1700
  4223     0097                     u63_20:
  4224     0097                     i1l1698:
  4225                           
  4226                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 522:         diff_us = HI_us - LO_us;
  4227     0097  0846               	movf	CCP4_EvenHandler@LO_us,w
  4228     0098  0271               	subwf	CCP4_EvenHandler@HI_us,w
  4229     0099  00C5               	movwf	CCP4_EvenHandler@diff_us
  4230     009A  289E               	goto	i1l285
  4231     009B                     i1l1700:
  4232                           
  4233                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 524:         diff_us = LO_us - HI_us;
  4234     009B  0871               	movf	CCP4_EvenHandler@HI_us,w
  4235     009C  0246               	subwf	CCP4_EvenHandler@LO_us,w
  4236     009D  00C5               	movwf	CCP4_EvenHandler@diff_us
  4237     009E                     i1l285:
  4238                           
  4239                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 526:       if (fHead == 0) {
  4240     009E  0843               	movf	CCP4_EvenHandler@fHead,w
  4241     009F  1D03               	btfss	3,2
  4242     00A0  28A2               	goto	u64_21
  4243     00A1  28A3               	goto	u64_20
  4244     00A2                     u64_21:
  4245     00A2  28B2               	goto	i1l1710
  4246     00A3                     u64_20:
  4247     00A3                     i1l287:	
  4248                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 527:         do { LATCbits.LATC4 = 1; } while
      +                          (0);
  4249                           
  4250     00A3  0022               	movlb	2	; select bank2
  4251     00A4  160E               	bsf	14,4	;volatile
  4252     00A5                     i1l1702:
  4253                           
  4254                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 529:         if (diff_us < (16)) {
  4255     00A5  3010               	movlw	16
  4256     00A6  0020               	movlb	0	; select bank0
  4257     00A7  0245               	subwf	CCP4_EvenHandler@diff_us,w
  4258     00A8  1803               	skipnc
  4259     00A9  28AB               	goto	u65_21
  4260     00AA  28AC               	goto	u65_20
  4261     00AB                     u65_21:
  4262     00AB  2913               	goto	i1l304
  4263     00AC                     u65_20:
  4264     00AC                     i1l1704:
  4265                           
  4266                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 531:           fHead = 1;
  4267     00AC  01C3               	clrf	CCP4_EvenHandler@fHead
  4268     00AD  0AC3               	incf	CCP4_EvenHandler@fHead,f
  4269     00AE                     i1l1706:
  4270                           
  4271                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 532:           data_cnt = 0;
  4272     00AE  01C2               	clrf	CCP4_EvenHandler@data_cnt
  4273     00AF                     i1l1708:
  4274     00AF  0022               	movlb	2	; select bank2
  4275     00B0  120E               	bcf	14,4	;volatile
  4276     00B1  2913               	goto	i1l304
  4277     00B2                     i1l1710:
  4278                           
  4279                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 537:         if (diff_us < (16)) {
  4280     00B2  3010               	movlw	16
  4281     00B3  0245               	subwf	CCP4_EvenHandler@diff_us,w
  4282     00B4  1803               	skipnc
  4283     00B5  28B7               	goto	u66_21
  4284     00B6  28B8               	goto	u66_20
  4285     00B7                     u66_21:
  4286     00B7  28C8               	goto	i1l297
  4287     00B8                     u66_20:
  4288     00B8                     i1l294:	
  4289                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 539:           do { LATCbits.LATC4 = 0; } whi
      +                          le(0);
  4290                           
  4291     00B8  0022               	movlb	2	; select bank2
  4292     00B9  120E               	bcf	14,4	;volatile
  4293     00BA                     i1l1712:
  4294                           
  4295                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 540:           rx_data &= ~(1 << data_cnt);
  4296     00BA  3001               	movlw	1
  4297     00BB  00F8               	movwf	??_CCP4_EvenHandler
  4298     00BC  0020               	movlb	0	; select bank0
  4299     00BD  0A42               	incf	CCP4_EvenHandler@data_cnt,w
  4300     00BE  28C0               	goto	u67_24
  4301     00BF                     u67_25:
  4302     00BF  35F8               	lslf	??_CCP4_EvenHandler,f
  4303     00C0                     u67_24:
  4304     00C0  0B89               	decfsz	9,f
  4305     00C1  28BF               	goto	u67_25
  4306     00C2  0878               	movf	??_CCP4_EvenHandler,w
  4307     00C3  3AFF               	xorlw	255
  4308     00C4  00F9               	movwf	??_CCP4_EvenHandler+1
  4309     00C5  0879               	movf	??_CCP4_EvenHandler+1,w
  4310     00C6  05F5               	andwf	_rx_data,f
  4311                           
  4312                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 541:         } else {
  4313     00C7  28D6               	goto	i1l296
  4314     00C8                     i1l297:	
  4315                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 543:           do { LATCbits.LATC4 = 1; } whi
      +                          le(0);
  4316                           
  4317     00C8  0022               	movlb	2	; select bank2
  4318     00C9  160E               	bsf	14,4	;volatile
  4319     00CA                     i1l1714:
  4320                           
  4321                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 544:           rx_data |= (1 << data_cnt);
  4322     00CA  3001               	movlw	1
  4323     00CB  00F8               	movwf	??_CCP4_EvenHandler
  4324     00CC  0020               	movlb	0	; select bank0
  4325     00CD  0A42               	incf	CCP4_EvenHandler@data_cnt,w
  4326     00CE  28D0               	goto	u68_24
  4327     00CF                     u68_25:
  4328     00CF  35F8               	lslf	??_CCP4_EvenHandler,f
  4329     00D0                     u68_24:
  4330     00D0  0B89               	decfsz	9,f
  4331     00D1  28CF               	goto	u68_25
  4332     00D2  0878               	movf	??_CCP4_EvenHandler,w
  4333     00D3  00F9               	movwf	??_CCP4_EvenHandler+1
  4334     00D4  0879               	movf	??_CCP4_EvenHandler+1,w
  4335     00D5  04F5               	iorwf	_rx_data,f
  4336     00D6                     i1l296:	
  4337                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 545:         }
  4338                           
  4339                           
  4340                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 547:         data_cnt++;
  4341     00D6  3001               	movlw	1
  4342     00D7  00F8               	movwf	??_CCP4_EvenHandler
  4343     00D8  0878               	movf	??_CCP4_EvenHandler,w
  4344     00D9  07C2               	addwf	CCP4_EvenHandler@data_cnt,f
  4345     00DA                     i1l1716:
  4346                           
  4347                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 548:         if (data_cnt > 7) {
  4348     00DA  3008               	movlw	8
  4349     00DB  0242               	subwf	CCP4_EvenHandler@data_cnt,w
  4350     00DC  1C03               	skipc
  4351     00DD  28DF               	goto	u69_21
  4352     00DE  28E0               	goto	u69_20
  4353     00DF                     u69_21:
  4354     00DF  28E4               	goto	i1l281
  4355     00E0                     u69_20:
  4356     00E0                     i1l1718:
  4357                           
  4358                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 549:           fHead = 0;
  4359     00E0  01C3               	clrf	CCP4_EvenHandler@fHead
  4360     00E1                     i1l1720:
  4361                           
  4362                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 550:           data_1byte_OK = 1;
  4363     00E1  3001               	movlw	1
  4364     00E2  00CC               	movwf	_data_1byte_OK	;volatile
  4365     00E3  2913               	goto	i1l304
  4366     00E4                     i1l281:	
  4367                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 553:     }
  4368                           
  4369                           
  4370                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 555:   }
  4371     00E4  2913               	goto	i1l304
  4372     00E5                     i1l1722:
  4373     00E5  3005               	movlw	5
  4374     00E6  061A               	xorwf	26,w	;volatile
  4375     00E7  1D03               	btfss	3,2
  4376     00E8  28EA               	goto	u70_21
  4377     00E9  28EB               	goto	u70_20
  4378     00EA                     u70_21:
  4379     00EA  2913               	goto	i1l304
  4380     00EB                     u70_20:
  4381     00EB                     i1l1724:
  4382                           
  4383                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 558:     rising_edge_time = capturedValue;
  4384     00EB  0877               	movf	CCP4_EvenHandler@capturedValue+1,w
  4385     00EC  0020               	movlb	0	; select bank0
  4386     00ED  00BA               	movwf	CCP4_EvenHandler@rising_edge_time+1
  4387     00EE  0876               	movf	CCP4_EvenHandler@capturedValue,w
  4388     00EF  00B9               	movwf	CCP4_EvenHandler@rising_edge_time
  4389                           
  4390                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 559:     CCP4CON = 0x04;
  4391     00F0  3004               	movlw	4
  4392     00F1  0026               	movlb	6	; select bank6
  4393     00F2  009A               	movwf	26	;volatile
  4394                           
  4395                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 561:     if (rising_edge_time >= falling_edge
      +                          _time) {
  4396     00F3  0020               	movlb	0	; select bank0
  4397     00F4  083C               	movf	CCP4_EvenHandler@falling_edge_time+1,w
  4398     00F5  023A               	subwf	CCP4_EvenHandler@rising_edge_time+1,w
  4399     00F6  1D03               	skipz
  4400     00F7  28FA               	goto	u71_25
  4401     00F8  083B               	movf	CCP4_EvenHandler@falling_edge_time,w
  4402     00F9  0239               	subwf	CCP4_EvenHandler@rising_edge_time,w
  4403     00FA                     u71_25:
  4404     00FA  1C03               	skipc
  4405     00FB  28FD               	goto	u71_21
  4406     00FC  28FE               	goto	u71_20
  4407     00FD                     u71_21:
  4408     00FD  2905               	goto	i1l1728
  4409     00FE                     u71_20:
  4410     00FE                     i1l1726:
  4411                           
  4412                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 562:       pluse_width_LO = rising_edge_time 
      +                          - falling_edge_time;
  4413     00FE  083B               	movf	CCP4_EvenHandler@falling_edge_time,w
  4414     00FF  0239               	subwf	CCP4_EvenHandler@rising_edge_time,w
  4415     0100  00BF               	movwf	CCP4_EvenHandler@pluse_width_LO
  4416     0101  083C               	movf	CCP4_EvenHandler@falling_edge_time+1,w
  4417     0102  3B3A               	subwfb	CCP4_EvenHandler@rising_edge_time+1,w
  4418     0103  00C0               	movwf	CCP4_EvenHandler@pluse_width_LO+1
  4419                           
  4420                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 563:     } else {
  4421     0104  2911               	goto	i1l1730
  4422     0105                     i1l1728:
  4423                           
  4424                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 564:       pluse_width_LO = (0xffff - falling
      +                          _edge_time) + rising_edge_time;
  4425     0105  083C               	movf	CCP4_EvenHandler@falling_edge_time+1,w
  4426     0106  00F9               	movwf	??_CCP4_EvenHandler+1
  4427     0107  083B               	movf	CCP4_EvenHandler@falling_edge_time,w
  4428     0108  00F8               	movwf	??_CCP4_EvenHandler
  4429     0109  09F8               	comf	??_CCP4_EvenHandler,f
  4430     010A  09F9               	comf	??_CCP4_EvenHandler+1,f
  4431     010B  0839               	movf	CCP4_EvenHandler@rising_edge_time,w
  4432     010C  0778               	addwf	??_CCP4_EvenHandler,w
  4433     010D  00BF               	movwf	CCP4_EvenHandler@pluse_width_LO
  4434     010E  083A               	movf	CCP4_EvenHandler@rising_edge_time+1,w
  4435     010F  3D79               	addwfc	??_CCP4_EvenHandler+1,w
  4436     0110  00C0               	movwf	CCP4_EvenHandler@pluse_width_LO+1
  4437     0111                     i1l1730:
  4438                           
  4439                           ;D:\yiming\work\TOYOTA_RX_serial.X\main.c: 566:     rise_edge_flag = 1;
  4440     0111  01C4               	clrf	CCP4_EvenHandler@rise_edge_flag
  4441     0112  0AC4               	incf	CCP4_EvenHandler@rise_edge_flag,f
  4442     0113                     i1l304:
  4443     0113  0008               	return
  4444     0114                     __end_of_CCP4_EvenHandler:
  4445     007E                     btemp	set	126	;btemp
  4446     007E                     int$flags	set	126
  4447     007E                     wtemp0	set	126
  4448                           
  4449                           	psect	idloc
  4450                           
  4451                           ;Config register IDLOC0 @ 0x8000
  4452                           ;	unspecified, using default values
  4453     8000                     	org	32768
  4454     8000  3FFF               	dw	16383
  4455                           
  4456                           ;Config register IDLOC1 @ 0x8001
  4457                           ;	unspecified, using default values
  4458     8001                     	org	32769
  4459     8001  3FFF               	dw	16383
  4460                           
  4461                           ;Config register IDLOC2 @ 0x8002
  4462                           ;	unspecified, using default values
  4463     8002                     	org	32770
  4464     8002  3FFF               	dw	16383
  4465                           
  4466                           ;Config register IDLOC3 @ 0x8003
  4467                           ;	unspecified, using default values
  4468     8003                     	org	32771
  4469     8003  3FFF               	dw	16383
  4470                           
  4471                           	psect	config
  4472                           
  4473                           ;Config register CONFIG1 @ 0x8007
  4474                           ;	Oscillator Selection
  4475                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4476                           ;	Watchdog Timer Enable
  4477                           ;	WDTE = OFF, WDT disabled
  4478                           ;	Power-up Timer Enable
  4479                           ;	PWRTE = OFF, PWRT disabled
  4480                           ;	MCLR Pin Function Select
  4481                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4482                           ;	Flash Program Memory Code Protection
  4483                           ;	CP = OFF, Program memory code protection is disabled
  4484                           ;	Data Memory Code Protection
  4485                           ;	CPD = OFF, Data memory code protection is disabled
  4486                           ;	Brown-out Reset Enable
  4487                           ;	BOREN = ON, Brown-out Reset enabled
  4488                           ;	Clock Out Enable
  4489                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4490                           ;	Internal/External Switchover
  4491                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4492                           ;	Fail-Safe Clock Monitor Enable
  4493                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4494     8007                     	org	32775
  4495     8007  3FE4               	dw	16356
  4496                           
  4497                           ;Config register CONFIG2 @ 0x8008
  4498                           ;	Flash Memory Self-Write Protection
  4499                           ;	WRT = OFF, Write protection off
  4500                           ;	Voltage Regulator Capacitor Enable
  4501                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  4502                           ;	PLL Enable
  4503                           ;	PLLEN = ON, 4x PLL enabled
  4504                           ;	Stack Overflow/Underflow Reset Enable
  4505                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4506                           ;	Brown-out Reset Voltage Selection
  4507                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4508                           ;	Low-Voltage Programming Enable
  4509                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4510     8008                     	org	32776
  4511     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        64
    BSS         51
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      2      47
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), CCP4_EvenHandler(), NULL(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), CCP4_EvenHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), TMR0_EvenHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), TMR0_EvenHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR0_CallBack->_TMR0_EvenHandler
    _CCP4_CaptureISR->_CCP4_EvenHandler

Critical Paths under _main in BANK0

    _main->_CCP4_SetCallBack
    _main->_TMR0_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1241
                   _CCP4_SetCallBack
                         _LED_output
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _check_input
                       _getFrameData
 ---------------------------------------------------------------------------------
 (1) _getFrameData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_input                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                    _CCP4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_output                                           1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     144
                    _CCP4_CaptureISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
                   _TMR0_EvenHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_EvenHandler                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      2     2      0     144
                                              4 COMMON     2     2      0
                                NULL *
               _CCP4_DefaultCallBack *
                   _CCP4_EvenHandler *
 ---------------------------------------------------------------------------------
 (6) _CCP4_EvenHandler                                     4     2      2      44
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _LED_output
   _SYSTEM_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _check_input
   _getFrameData

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     NULL(Fake) *
     _CCP4_DefaultCallBack *
     _CCP4_EvenHandler *
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _TMR0_EvenHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      2F       6       58.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      7B      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 15 13:51:29 2025

                              _CCP4_Initialize 02D5                                             _D2 0074  
                                           _D3 0049                                             _CS 00A0  
                              _timer0ReloadVal 0070                                            l200 01E8  
                                          l211 01F7                                            l203 01ED  
                                          l212 01F6                                            l220 01FE  
                                          l205 01F0                                            l206 01EF  
                                          l230 0221                                            l215 01FB  
                                          l231 0227                                            l223 020B  
                                          l232 0228                                            l224 020C  
                                          l209 01F4                                            l233 022E  
                                          l225 0212                                            l218 01FD  
                                          l226 0213                                            l235 022F  
                                          l227 0219                                            l228 021A  
                                          l229 0220                                            l191 01DF  
                                          l344 0358                                            l432 034C  
                                          l193 01E2                                            l185 01D6  
                                          l257 0184                                            l194 01E1  
                                          l338 02E6                                            l187 01DB  
                                          l435 0346                                            l188 01D9  
                                          l197 01E6                                            l438 0352  
                                          l526 0292                                            l199 01E9  
                                          l570 0340                                            l387 0255  
                                          l492 032E                                            l548 02D4  
                                          l486 02C0                                            l495 035C  
                                          l592 0315                                            l489 0329  
                              _timer1ReloadVal 002B                 ?_EUSART_SetFramingErrorHandler 004D  
               CCP4_SetCallBack@customCallBack 004D                                            wreg 0009  
                             _CCP4_SetCallBack 0353                        __end_of_CCP4_CaptureISR 02F9  
                                  ?_LED_output 0076                                           l2100 02C9  
                                         l2110 01CC                                           l2030 0341  
                                         l2102 02CB                                           l2112 01D2  
                                         l2024 0353                                           l2040 02DA  
                                         l2032 034D                                           l2104 02CC  
                                         l2120 0209                                           l2042 02E2  
                                         l2034 02D5                                           l2050 0243  
                                         l2026 033B                                           l2106 02CD  
                                         l2130 022C                                           l2122 0210  
                                         l2114 01FF                                           l2108 01C5  
                                         l2044 02E4                                           l2036 02D8  
                                         l2028 0347                                           l2052 024B  
                                         l2060 027D                                           l2124 0217  
                                         l2116 0204                                           l2140 0124  
                                         l2132 0114                                           l2038 02D9  
                                         l2054 0253                                           l2046 0230  
                                         l2070 0289                                           l2062 0280  
                                         l2126 021E                                           l2118 0205  
                                         l2150 0134                                           l2142 0127  
                                         l2134 011A                                           l2048 023B  
                                         l2080 0323                                           l2072 028B  
                                         l2064 0282                                           l2056 0277  
                                         l2128 0225                                           l2160 014D  
                                         l2152 0139                                           l2144 0129  
                                         l2136 011C                                           l2082 0326  
                                         l2074 028D                                           l2066 0284  
                                         l2058 027B                                           l2090 030C  
                                         l2162 0152                                           l2154 013E  
                                         l2146 012F                                           l2138 0122  
                                         l2084 0327                                           l2076 028E  
                                         l2068 0286                                           l2092 030D  
                                         l2164 0157                                           l2156 0143  
                                         l2180 0256                                           l2078 0290  
                                         l2094 030E                                           l2086 0359  
                                         l2166 015C                                           l2158 0148  
                                         l2190 0271                                           l2182 0269  
                                         l2096 02C1                                           l2088 0309  
                                         l2168 015E                                           l2176 0161  
                                         l2184 026A                                           l2098 02C6  
                                         l2178 02AB                                           l2186 026B  
                                         l2188 026E                                           u1110 032E  
                                         u1111 032D                                           u1120 01D2  
                                         u1200 0210                                           u1121 01D1  
                                         u1201 020F                                           u1130 01D6  
                                         u1210 0217                                           u1131 01D5  
                                         u1211 0216                                           u1140 01DF  
                                         u1220 021E                                           u1141 01DE  
                                         u1221 021D                                           u1150 01E6  
                                         u1230 0225                                           u1151 01E5  
                                         u1231 0224                                           u1160 01ED  
                                         u1240 022C                                           u1161 01EC  
                                         u1241 022B                                           u1170 01F4  
                                         u1250 011A                                           u1171 01F3  
                                         u1251 0119                                           u1180 01FB  
                                         u1260 0122                                           u1181 01FA  
                                         u1261 0121                                           _LATA 010C  
                                         u1190 0209                                           u1270 012F  
                                         _LATB 010D                                           u1191 0208  
                                         u1271 012E                                           _LATC 010E  
                                         _LATE 0110                                           _PLLR 04D6  
                                         _TMR0 0015                                           _WPUB 020D  
                                         _WPUE 0210                                           _main 0256  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         _step 004A                                           btemp 007E  
                                         start 0026                        __end_of_TMR0_Initialize 02D5  
               ??_TMR0_DefaultInterruptHandler 0076                  __end_of_OSCILLATOR_Initialize 032F  
                                        ?_main 0076                         ??_CCP4_DefaultCallBack 0078  
                                        _T1CON 0018                                          i1l310 0308  
                                        i1l304 0113                                          i1l341 02F8  
                                        i1l335 035E                                          i1l281 00E4  
                                        i1l283 0079                                          i1l285 009E  
                                        i1l453 0012                                          i1l294 00B8  
                                        i1l287 00A3                                          i1l296 00D6  
                                        i1l297 00C8                                          i1l458 0024  
                                        i1l563 02AA                                          i1l459 0024  
                                        i1l573 035D                                          i1l567 0322  
                                        _RCREG 0199                       __end_of_TMR0_EvenHandler 0309  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          u60_20 004D  
                                        u60_21 004C                                          u61_20 005B  
                                        u61_21 005A                                          u70_20 00EB  
                                        u62_20 0066                                          u70_21 00EA  
                                        u62_21 0065                                          u62_25 0062  
                                        u71_20 00FE                                          u63_20 0097  
                                        u71_21 00FD                                          u63_21 0096  
                                        u71_25 00FA                                          u64_20 00A3  
                                        u72_20 031D                                          u64_21 00A2  
                                        u72_21 031C                                          u65_20 00AC  
                                        u65_21 00AB                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          u66_20 00B8  
                                        u58_20 02FF                                          u66_21 00B7  
                                        u58_21 02FE                                          u59_20 0304  
                                        u91_20 02A4                                          u59_21 0303  
                                        u91_21 02A3                                          u67_24 00C0  
                                        u67_25 00BF                                          u68_24 00D0  
                                        u68_25 00CF                                          u69_20 00E0  
                                        u69_21 00DF                                          _TXREG 019A  
                                        _TXSTA 019E                      ?_TMR0_SetInterruptHandler 004D  
                             __end_of_TMR0_ISR 02AB                                 _WDT_Initialize 0359  
                      __end_of_TMR1_Initialize 0316                                          pclath 000A  
                                        status 0003                        __end_of_CCP4_Initialize 02E7  
                                        wtemp0 007E                           __end_of_getFrameData 0185  
                              __initialization 0028                                   __end_of_main 0277  
                  ?_INTERRUPT_InterruptManager 0076                                         ??_main 004F  
                       __end_of_WDT_Initialize 035D                               ?_CCP4_CaptureISR 0076  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0033  
                                       _CCPR4H 0319                                         _CCPR4L 0318  
                     __end_of_CCP4_EvenHandler 0114                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       u110_20 0020                                         u110_21 001F  
                                       i1l2010 0006                                         i1l2020 0020  
                                       i1l2012 000A                                         i1l2014 000E  
                                       i1l2016 0016                                         i1l2018 001B  
                                       i1l1700 009B                                         i1l1702 00A5  
                                       i1l1710 00B2                                         i1l1720 00E1  
                                       i1l1712 00BA                                         i1l1704 00AC  
                                       i1l1730 0111                                         i1l1714 00CA  
                                       i1l1706 00AE                                         i1l1722 00E5  
                                       i1l1724 00EB                                         i1l1716 00DA  
                                       i1l1708 00AF                                         i1l1726 00FE  
                                       i1l1718 00E0                                         i1l1670 0304  
                                       i1l1728 0105                                         u106_20 000A  
                                       u106_21 0009                                         i1l1690 005C  
                                       i1l1682 0046                                         i1l1850 02E7  
                                       i1l1666 02F9                                         i1l1692 0066  
                                       i1l1684 004D                                         i1l1852 02E9  
                                       i1l1668 02FF                                         i1l1694 006D  
                                       i1l1686 0055                                         i1l1854 02EE  
                                       i1l1774 0316                                         i1l1870 0294  
                                       i1l1696 0091                                         i1l1688 005B  
                                       i1l1776 031D                                         i1l1872 02A4  
                                       u107_20 000E                                         u107_21 000D  
                                       i1l1698 0097                                         i1l1874 02A7  
                                       i1l1868 0293                                         u108_20 0016  
                                       u108_21 0015                                         u109_20 001B  
                                       u109_21 001A                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _csFlag 0073  
                             ?_TMR0_Initialize 0076                        CCP4_EvenHandler@diff_us 0045  
                                _CCP4_CallBack 0037                                ?_WDT_Initialize 0076  
                        __end_of_TMR0_CallBack 0323       TMR0_SetInterruptHandler@InterruptHandler 004D  
                             ?_TMR1_Initialize 0076                              _SYSTEM_Initialize 02AB  
                      __end_of__initialization 0042                               ?_CCP4_Initialize 0076  
                           ?_SYSTEM_Initialize 0076                       __end_of_CCP4_SetCallBack 0359  
                               __pcstackCOMMON 0076                                   __pidataBANK1 0185  
                          ??_SYSTEM_Initialize 004F                                      ?_TMR0_ISR 0076  
                        CCP4_EvenHandler@HI_us 0071                                 _OPTION_REGbits 0095  
                        CCP4_EvenHandler@LO_us 0046                          TMR0_ISR@CountCallBack 002D  
                        CCP4_EvenHandler@fHead 0043                ??_EUSART_SetOverrunErrorHandler 004F  
                                 ??_LED_output 004D                      __end_of_SYSTEM_Initialize 02C1  
                                   __pbssBANK0 0020                                     __pmaintext 0256  
             __end_of_TMR0_SetInterruptHandler 0341                                     ??_TMR0_ISR 0077  
                                   __pintentry 0004                                        _CCP4CON 031A  
                                      _BAUDCON 019F                             __end_of_LED_output 01FF  
                                 _getFrameData 0114               CCP4_EvenHandler@rising_edge_time 0039  
                            ?_TMR0_EvenHandler 0076                                        _OSCTUNE 0098  
                           ??_TMR0_EvenHandler 0076                       ??_EUSART_SetErrorHandler 004F  
                                      __ptext1 0114                                        __ptext2 01FF  
                                      __ptext3 02AB                                        __ptext4 0359  
                                      __ptext5 0309                                        __ptext6 02C1  
                                      __ptext7 033B                                        __ptext8 0277  
                                      __ptext9 0323                       CCP4_EvenHandler@data_cnt 0042  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0323  
                                ??_check_input 004D                       ??_PIN_MANAGER_Initialize 004D  
                                _data_1byte_OK 004C                                        _rx_data 0075  
                                      clrloop0 0336                           end_of_initialization 0042  
                            ?_CCP4_EvenHandler 0076          __end_of_EUSART_SetOverrunErrorHandler 0347  
                _EUSART_SetOverrunErrorHandler 0341                                        init_ram 032F  
                           ??_CCP4_EvenHandler 0078                                        initloop 0330  
                            _EUSART_Initialize 0230                             ?_EUSART_Initialize 0076  
                                    _RCSTAbits 019D                            ??_EUSART_Initialize 004F  
                             ??_WDT_Initialize 004D                       _TMR0_SetInterruptHandler 033B  
                          __end_of_check_input 0230                      __end_of_EUSART_Initialize 0256  
                                    _TXSTAbits 019E              CCP4_DefaultCallBack@capturedValue 0076  
                            ?_CCP4_SetCallBack 004D                             ??_CCP4_SetCallBack 004F  
                   _EUSART_DefaultErrorHandler 0000                         ?_OSCILLATOR_Initialize 0076  
                          start_initialization 0028                                 LED_output@crc8 004D  
               ?_EUSART_SetOverrunErrorHandler 004D                 CCP4_EvenHandler@rise_edge_flag 0044  
                   _EUSART_FramingErrorHandler 0035                         _EUSART_SetErrorHandler 034D  
                                    _fFrame_OK 004B                                    __pdataBANK1 00A0  
                        CCP4_CaptureISR@module 007A                                    __pbssCOMMON 0070  
                                  _check_input 01FF                                      ___latbits 0002  
                                __pcstackBANK0 004D                          _TMR0_InterruptHandler 002F  
                       _PIN_MANAGER_Initialize 0277                              ??_CCP4_CaptureISR 007A  
                 ??_INTERRUPT_InterruptManager 007C                                  _TMR0_CallBack 0316  
                CCP4_EvenHandler@capturedValue 0076                              ??_TMR0_Initialize 004F  
                                     _LED_STEP 0072         EUSART_SetErrorHandler@interruptHandler 004D  
                                     _LATBbits 010D                                       _LATCbits 010E  
                                    clear_ram0 0335                   __end_of_CCP4_DefaultCallBack 035F  
                                     _PIE3bits 0093                              _eusartRxLastError 0041  
                   ??_TMR0_SetInterruptHandler 004F                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 004F                                       _PIR3bits 0013  
                                     _TMR0_ISR 0293              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_TMR1_Initialize 004D                              ??_CCP4_Initialize 004F  
                               ?_TMR0_CallBack 0076                        ??_OSCILLATOR_Initialize 004D  
                          _EUSART_ErrorHandler 0031                                       _data_buf 0020  
                                     __ptext10 0230                                       __ptext11 0341  
                                     __ptext20 035D                                       __ptext12 0347  
                                     __ptext21 02F9                                       __ptext13 034D  
                                   _T1GCONbits 0019                                       __ptext22 02E7  
                                     __ptext14 02D5                                       __ptext23 035E  
                                     __ptext15 0353                                       __ptext24 0046  
                                     __ptext16 01C5                                       __ptext18 0293  
                                     __ptext19 0316                               _TMR0_EvenHandler 02F9  
         __end_of_TMR0_DefaultInterruptHandler 035E                   _TMR0_DefaultInterruptHandler 035D  
                      ?_EUSART_SetErrorHandler 004D  EUSART_SetOverrunErrorHandler@interruptHandler 004D  
                                     int$flags 007E              CCP4_EvenHandler@falling_edge_time 003B  
           __end_of_INTERRUPT_InterruptManager 0026                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 034D                  _EUSART_SetFramingErrorHandler 0347  
                                ?_getFrameData 0076                                     _INTCONbits 000B  
                           _fSerialStart_Right 0047                                   ?_check_input 0076  
                         _CCP4_DefaultCallBack 035E                                ??_TMR0_CallBack 0077  
                                   _LED_output 01C5                 CCP4_EvenHandler@pluse_width_HI 003D  
               CCP4_EvenHandler@pluse_width_LO 003F                                       intlevel1 0000  
                              _CCP4_CaptureISR 02E7                        ?_PIN_MANAGER_Initialize 0076  
               __end_of_EUSART_SetErrorHandler 0353                  ?_TMR0_DefaultInterruptHandler 0076  
                             _CCP4_EvenHandler 0046  EUSART_SetFramingErrorHandler@interruptHandler 004D  
                            _fSerialStart_Left 0048                                 ??_getFrameData 004D  
                                   _OPTION_REG 0095                          ?_CCP4_DefaultCallBack 0076  
                              _TMR0_Initialize 02C1                 __end_of_PIN_MANAGER_Initialize 0293  
                              _TMR1_Initialize 0309  
